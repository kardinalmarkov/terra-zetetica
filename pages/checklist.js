// pages/checklist.js
import Head from 'next/head'
import { useState, useEffect } from 'react'

const checklistBlocks = [
  {
    section: 'üöÄ –°—Ç–∞—Ä—Ç–æ–≤—ã–π –º–∏–Ω–∏–º—É–º',
    subtitle: '–ü–µ—Ä–≤–æ–µ, —á—Ç–æ –¥–æ–ª–∂–µ–Ω —Å–¥–µ–ª–∞—Ç—å –ª—é–±–æ–π –Ω–æ–≤–∏—á–æ–∫',
    items: [
      <>
        –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è –≤{' '}
        <a
          href="https://t.me/ZeteticID_bot"
          target="_blank"
          rel="noopener noreferrer"
          style={{ color: '#0066cc' }}
        >
          @ZeteticID_bot
        </a>{' '}
        –∏ –ø–æ–ª—É—á–∏–ª Z-ID{' '}
        <span
          title="–ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–Ω—É—Ç —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ —Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–µ–π, –Ω–∞–ø–∏—à–∏—Ç–µ –≤ —á–∞—Ç –ø—Ä–æ–µ–∫—Ç–∞"
          style={{ cursor: 'help' }}
        >
          ‚ùì
        </span>
      </>,
      <>
        –°–∫–∞—á–∞–ª –∏ —Å–æ—Ö—Ä–∞–Ω–∏–ª NFT-–ø–∞—Å–ø–æ—Ä—Ç (PDF + CID){' '}
        <span
          title="–°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —Ñ–∞–π–ª –≤ –ª–∏—á–Ω–æ–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ (IPFS/–ª–æ–∫–∞–ª—å–Ω—ã–π –¥–∏—Å–∫), —á—Ç–æ–±—ã –Ω–µ –ø–æ—Ç–µ—Ä—è—Ç—å –¥–æ—Å—Ç—É–ø"
          style={{ cursor: 'help' }}
        >
          ‚ùì
        </span>
      </>,
      <>
        –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–º—É —á–∞—Ç—É{' '}
        <a
          href="https://t.me/TerraZetChat"
          target="_blank"
          rel="noopener noreferrer"
          style={{ color: '#0066cc' }}
        >
          TerraZetChat
        </a>{' '}
        –∏ –ø–∞–±–ª–∏–∫—É{' '}
        <a
          href="https://t.me/TerraZetetica"
          target="_blank"
          rel="noopener noreferrer"
          style={{ color: '#0066cc' }}
        >
          TerraZetetica
        </a>
      </>,
    ],
  },
  {
    section: 'üèòÔ∏è –õ–æ–∫–∞–ª—å–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å',
    subtitle: '–ß—Ç–æ –º–æ–∂–Ω–æ –∏ –Ω—É–∂–Ω–æ –¥–µ–ª–∞—Ç—å –∂–∏—Ç–µ–ª—è–º –∞–Ω–∫–ª–∞–≤–æ–≤',
    items: [
      '–û–±–æ–∑–Ω–∞—á–∏–ª —Å–≤–æ–π –∞–Ω–∫–ª–∞–≤ (–∫–æ–º–Ω–∞—Ç–∞, —É—á–∞—Å—Ç–æ–∫, –¥–æ–º –∏ —Ç.–¥.) –∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª –µ–≥–æ –≤ DAO –∏–ª–∏ —á–µ—Ä–µ–∑ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ',
      <>
        –£—Å—Ç–∞–Ω–æ–≤–∏–ª —Å–∏–º–≤–æ–ª–∏–∫—É (—Ñ–ª–∞–≥, —Ç–∞–±–ª–∏—á–∫–∞, –∫–∞—Ä—Ç–∞) –Ω–∞ —Å–≤–æ—ë–º –∞–Ω–∫–ª–∞–≤–µ{' '}
        <span
          title="–®–∞–±–ª–æ–Ω—ã —Ñ–ª–∞–≥–∞ –º–æ–∂–Ω–æ —Å–∫–∞—á–∞—Ç—å –≤ —Ä–∞–∑–¥–µ–ª–µ ¬´–ú–∞—Ç–µ—Ä–∏–∞–ª—ã¬ª"
          style={{ cursor: 'help' }}
        >
          ‚ùì
        </span>
      </>,
      <>
        –°–Ω—è–ª —Ñ–æ—Ç–æ/–≤–∏–¥–µ–æ —Å –º–µ—Å—Ç–∞ –∏ –æ—Ç–ø—Ä–∞–≤–∏–ª –æ—Ç—á—ë—Ç –≤ –∞—Ä—Ö–∏–≤ –ø—Ä–æ–µ–∫—Ç–∞ —á–µ—Ä–µ–∑ —Ñ–æ—Ä–º—É –≤ —Ä–∞–∑–¥–µ–ª–µ ¬´–ö–æ–Ω—Ç–∞–∫—Ç—ã¬ª{' '}
        <span
          title="–§–æ—Ä–º–∞ –æ—Ç—á—ë—Ç–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ ¬´–ö–æ–Ω—Ç–∞–∫—Ç–∞—Ö¬ª ‚Üí ¬´–û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç—á—ë—Ç –∞–Ω–∫–ª–∞–≤–∞¬ª"
          style={{ cursor: 'help' }}
        >
          ‚ùì
        </span>
      </>,
      '–û—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–ª –ø–µ—Ä–≤—É—é –ª–æ–∫–∞–ª—å–Ω—É—é –≤—Å—Ç—Ä–µ—á—É –≥—Ä–∞–∂–¥–∞–Ω –∞–Ω–∫–ª–∞–≤–∞ (–æ–Ω–ª–∞–π–Ω –∏–ª–∏ –æ—Ñ–ª–∞–π–Ω) –∏ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ —á–∞—Ç–µ',
      '–†–∞–∑–º–µ—Å—Ç–∏–ª –±–∞–∑–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–≤–æ—ë–º –∞–Ω–∫–ª–∞–≤–µ –≤ —Å–∏—Å—Ç–µ–º–µ (–∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã, –∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ, –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ)',
    ],
  },
  {
    section: 'üìà –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ –∏ —ç–∫–æ–Ω–æ–º–∏–∫–∞',
    subtitle: '–î–ª—è —Ç–µ—Ö, –∫—Ç–æ —Ö–æ—á–µ—Ç —Ä–∞–∑–≤–∏–≤–∞—Ç—å —ç–∫–æ–Ω–æ–º–∏–∫—É –∞–Ω–∫–ª–∞–≤–∞',
    items: [
      '–ò–∑—É—á–∏–ª –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤–Ω–µ–¥—Ä–µ–Ω–∏—è Z-coin –≤ —ç–∫–æ–Ω–æ–º–∏–∫—É –∞–Ω–∫–ª–∞–≤–∞ –∏ —Å–¥–µ–ª–∞–ª –ø—Ä–∏–º–µ—Ä–Ω—ã–π —Ä–∞—Å—á—ë—Ç —Ä–æ—Å—Ç–∞ —ç–º–∏—Å—Å–∏–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 10 000 Z ‚Üí +10 % –µ–∂–µ–≥–æ–¥–Ω–æ ‚Üí ‚âà23 600 Z –∑–∞ 8 –ª–µ—Ç)',
      '–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–ª –∫–æ–Ω–∫—É—Ä–∏—Ä—É—é—â–∏–µ —Ç–æ–∫–µ–Ω—ã –∏ –ø–æ–¥–æ–±—Ä–∞–ª –≤—ã–≥–æ–¥–Ω—É—é –º–æ–¥–µ–ª—å —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è (—Ñ–æ—Ä–∂–∏—Ä–æ–≤–∞–Ω–∏–µ, –º–∞–π–Ω–∏–Ω–≥, —Å—Ç–µ–π–∫–∏–Ω–≥)',
      '–†–∞–∑—Ä–∞–±–æ—Ç–∞–ª –ø–ª–∞–Ω –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π: –≥—Ä–∞–Ω—Ç—ã, —Å–ø–æ–Ω—Å–æ—Ä—ã, –ª–æ–∫–∞–ª—å–Ω—ã–µ DAO-–º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è',
      '–°–æ—Å—Ç–∞–≤–∏–ª —Ç–∞–±–ª–∏—Ü—É –¥–æ—Ö–æ–¥–æ–≤/—Ä–∞—Å—Ö–æ–¥–æ–≤ –∞–Ω–∫–ª–∞–≤–∞ (–∑–µ–º–ª–µ–¥–µ–ª–∏–µ, –¥–∞—Ç–∞-—Ü–µ–Ω—Ç—Ä—ã, Z-–º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å)',
    ],
  },
  {
    section: 'üß≠ –£—á–∞—Å—Ç–∏–µ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ',
    subtitle: '–ö–∞–∫ —Å—Ç–∞—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–º —Ä–∞–∑–≤–∏—Ç–∏—è –ø—Ä–æ–µ–∫—Ç–∞',
    items: [
      '–ü—Ä–∏–Ω—è–ª —É—á–∞—Å—Ç–∏–µ –≤ –æ–±—Å—É–∂–¥–µ–Ω–∏—è—Ö/–æ–ø—Ä–æ—Å–∞—Ö —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ –∏ –≤–Ω—ë—Å —Å–≤–æ–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –≤ DAO',
      <>
        –û–∑–Ω–∞–∫–æ–º–∏–ª—Å—è —Å —Ç–µ–∫—É—â–∏–º–∏ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤–∞–º–∏ –∏ –ø—Ä–µ–¥–ª–æ–∂–∏–ª –Ω–æ–≤—É—é –∏–¥–µ—é —á–µ—Ä–µ–∑ —Ñ–æ—Ä–º—É ¬´–ò–Ω–∏—Ü–∏–∞—Ç–∏–≤—ã¬ª –≤ —Ä–∞–∑–¥–µ–ª–µ ¬´–ö–æ–Ω—Ç–∞–∫—Ç—ã¬ª{' '}
        <span
          title="–í —Ä–∞–∑–¥–µ–ª–µ ¬´–ö–æ–Ω—Ç–∞–∫—Ç—ã¬ª ‚Üí ¬´–ò–Ω–∏—Ü–∏–∞—Ç–∏–≤—ã¬ª –º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É"
          style={{ cursor: 'help' }}
        >
          ‚ùì
        </span>
      </>,
      '–°–ª–µ–¥—É—é –¥–æ—Ä–æ–∂–Ω–æ–π –∫–∞—Ä—Ç–µ Terra Zetetica –∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—é —Å—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á (–¥–µ–ª—é—Å—å –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑—å—é –≤ —á–∞—Ç–µ)',
    ],
  },
  {
    section: 'üì¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —É—á–∞—Å—Ç–∏–µ',
    subtitle: '–ö–∞–∫ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è—Ç—å –∏–¥–µ–∏ Terra Zetetica',
    items: [
      '–†–∞—Å—Å–∫–∞–∑–∞–ª 1‚Äì2 –∑–Ω–∞–∫–æ–º—ã–º –æ –ø—Ä–æ–µ–∫—Ç–µ –∏ –ø—Ä–∏–≥–ª–∞—Å–∏–ª –∏—Ö –≤ —á–∞—Ç/–ø–∞–±–ª–∏–∫',
      '–ü–æ–¥–ø–∏—Å–∞–Ω –∏ –∞–∫—Ç–∏–≤–µ–Ω –≤ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö –≥—Ä—É–ø–ø–∞—Ö (Telegram, Discord, –¥—Ä—É–≥–∏–µ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏)',
      '–û–ø—É–±–ª–∏–∫–æ–≤–∞–ª —Å—Ç–∞—Ç—å—é, –≤–∏–¥–µ–æ –∏–ª–∏ –æ–±–∑–æ—Ä –æ TZ –Ω–∞ –ª–∏—á–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö –∏–ª–∏ —Å—Ç–æ—Ä–æ–Ω–Ω–∏—Ö —Ä–µ—Å—É—Ä—Å–∞—Ö',
      '–ü–æ–¥–µ–ª–∏–ª—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –ø—Ä–æ TZ –≤ —Å–æ—Ü—Å–µ—Ç—è—Ö —Å —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤',
      '–ü–æ–º–æ–≥ –Ω–æ–≤–∏—á–∫–∞–º: –æ—Ç–≤–µ—Ç–∏–ª –Ω–∞ –∏—Ö –≤–æ–ø—Ä–æ—Å—ã –ø–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏, Z-ID –∏ —É—á–∞—Å—Ç–∏—é –≤ –∞–Ω–∫–ª–∞–≤–µ',
    ],
  },
  {
    section: 'üé® –ö—Ä–µ–∞—Ç–∏–≤–Ω—ã–π –≤–∫–ª–∞–¥',
    subtitle: '–î–ª—è —Ç–≤–æ—Ä—á–µ—Å–∫–∏—Ö –ª—é–¥–µ–π: –æ—Ç –¥–∏–∑–∞–π–Ω–∞ –¥–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π',
    items: [
      '–ù–∞—Ä–∏—Å–æ–≤–∞–ª –∏–ª–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–ª –ø–æ—Å—Ç–µ—Ä, —Å–∏–º–≤–æ–ª–∏–∫—É –∏–ª–∏ –º–µ–º –ø—Ä–æ TZ –∏ –∑–∞–≥—Ä—É–∑–∏–ª –≤ —Ä–∞–∑–¥–µ–ª ¬´–ú–∞—Ç–µ—Ä–∏–∞–ª—ã¬ª',
      '–ù–∞–ø–∏—Å–∞–ª –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é (¬´–ö–∞–∫ –æ—Ñ–æ—Ä–º–∏—Ç—å –∞–Ω–∫–ª–∞–≤¬ª –∏–ª–∏ ¬´–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å Z-ID¬ª) –∏ –æ—Ç–ø—Ä–∞–≤–∏–ª —á–µ—Ä–µ–∑ —Ñ–æ—Ä–º—É –≤ ¬´–ö–æ–Ω—Ç–∞–∫—Ç—ã¬ª',
      '–°–æ–∑–¥–∞–ª —à–∞–±–ª–æ–Ω –∏–ª–∏ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—é (–∏–Ω—Ñ–æ–≥—Ä–∞—Ñ–∏–∫—É, –∫–∞—Ä—Ç—É –∞–Ω–∫–ª–∞–≤–∞) –∏ –ø–æ–¥–µ–ª–∏–ª—Å—è —Å—Å—ã–ª–∫–æ–π –≤ —á–∞—Ç–µ',
    ],
  },
  {
    section: 'ü§ù –í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ',
    subtitle: '–ö–∞–∫ —Ä–∞—Å—à–∏—Ä—è—Ç—å —Å–µ—Ç—å –∏ –æ–±—ä–µ–¥–∏–Ω—è—Ç—å—Å—è —Å –¥—Ä—É–≥–∏–º–∏ –ø—Ä–æ–µ–∫—Ç–∞–º–∏',
    items: [
      '–ü—Ä–∏–≥–ª–∞—Å–∏–ª –Ω–æ–≤—ã—Ö –≥—Ä–∞–∂–¥–∞–Ω –≤ TZ (—Ä–∞—Å—Å—ã–ª–∫–æ–π –∏–ª–∏ —á–µ—Ä–µ–∑ —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏)',
      '–ù–∞–ª–∞–¥–∏–ª –∫–æ–Ω—Ç–∞–∫—Ç —Å –ø–æ—Ö–æ–∂–∏–º –ø—Ä–æ–µ–∫—Ç–æ–º –∏–ª–∏ –±–ª–æ–≥–µ—Ä–æ–º –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤',
      '–û—Ç–ø—Ä–∞–≤–∏–ª –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–µ (–≥—Ä–∞–Ω—Ç—ã, –æ–±–º–µ–Ω —Ä–µ—Å—É—Ä—Å–∞–º–∏) —á–µ—Ä–µ–∑ —Ä–∞–∑–¥–µ–ª ¬´–ö–æ–Ω—Ç–∞–∫—Ç—ã¬ª',
      '–°–¥–µ–ª–∞–ª –¥–æ–±—Ä–æ–≤–æ–ª—å–Ω—ã–π –≤–∫–ª–∞–¥: –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–ª —Ä–µ—Å—É—Ä—Å—ã, —É—Å–ª—É–≥–∏ –∏–ª–∏ Z-coin',
      '–ú–µ–Ω—Ç–æ—Ä—é –Ω–æ–≤–∏—á–∫–æ–≤: –∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É—é –ø–æ –≤–æ–ø—Ä–æ—Å–∞–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏, –∞–Ω–∫–ª–∞–≤–æ–≤, DAO',
    ],
  },
  {
    section: 'üî• –•—Ä–∞–Ω–µ–Ω–∏–µ –¥—É—Ö–∞',
    subtitle: '–ö–∞–∫ –Ω–µ –ø–æ—Ç–µ—Ä—è—Ç—å –º–æ—Ç–∏–≤–∞—Ü–∏—é –∏ –æ—Å—Ç–∞–≤–∞—Ç—å—Å—è –≤ ¬´–∑–æ–Ω–µ –ò—Å—Ç–∏–Ω—ã¬ª',
    items: [
      '–ù–µ –ø–æ–¥–¥–∞—é—Å—å –ø—Ä–æ–ø–∞–≥–∞–Ω–¥–µ: –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏ –ø—Ä–æ–≤–µ—Ä—è—é –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏',
      '–ü–æ—Å—Ç–æ—è–Ω–Ω–æ –æ–±—É—á–∞—é—Å—å: –Ω–∞–±–ª—é–¥–∞—é, –∞–Ω–∞–ª–∏–∑–∏—Ä—É—é, –¥–µ–ª–∞—é –≤—ã–≤–æ–¥—ã ‚Äî –≤–µ–¥—É –ª–∏—á–Ω—ã–π ¬´Z-–¥–Ω–µ–≤–Ω–∏–∫¬ª',
      '–í–æ–æ–¥—É—à–µ–≤–ª—è—é –¥—Ä—É–≥–∏—Ö –ø—Ä–∏–º–µ—Ä–æ–º: –∂–∏–≤—É –∫–∞–∫ –≥—Ä–∞–∂–¥–∞–Ω–∏–Ω –Ω–æ–≤–æ–≥–æ –º–∏—Ä–∞ –∏ –¥–µ–ª—é—Å—å –æ–ø—ã—Ç–æ–º –≤ —á–∞—Ç–µ',
    ],
  },
]

export default function Checklist() {
  const [checked, setChecked] = useState([])
  const [customTasks, setCustomTasks] = useState([])
  const [newTask, setNewTask] = useState('')

  // –ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑ localStorage
  useEffect(() => {
    const savedChecked = JSON.parse(localStorage.getItem('tz-checklist') || '[]')
    setChecked(savedChecked)

    const savedCustom = JSON.parse(localStorage.getItem('tz-custom-tasks') || '[]')
    setCustomTasks(savedCustom)
  }, [])

  // –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —á–µ–∫–±–æ–∫—Å–∞
  function toggleItem(id) {
    const next = checked.includes(id)
      ? checked.filter(i => i !== id)
      : [...checked, id]
    setChecked(next)
    localStorage.setItem('tz-checklist', JSON.stringify(next))
  }

  // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π –∑–∞–¥–∞—á–∏
  function handleAddCustomTask() {
    const text = newTask.trim()
    if (!text) return
    const id = `custom-${Date.now()}`
    const updated = [...customTasks, { id, text, done: false }]
    setCustomTasks(updated)
    localStorage.setItem('tz-custom-tasks', JSON.stringify(updated))
    setNewTask('')
  }

  // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π –∑–∞–¥–∞—á–∏
  function toggleCustomTask(id) {
    const updated = customTasks.map(task =>
      task.id === id ? { ...task, done: !task.done } : task
    )
    setCustomTasks(updated)
    localStorage.setItem('tz-custom-tasks', JSON.stringify(updated))
  }

  // –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π –∑–∞–¥–∞—á–∏
  function deleteCustomTask(id) {
    const updated = customTasks.filter(task => task.id !== id)
    setCustomTasks(updated)
    localStorage.setItem('tz-custom-tasks', JSON.stringify(updated))
  }

  return (
    <main className="wrapper">
      <Head>
        <title>–ß–µ–∫-–ª–∏—Å—Ç –≥—Ä–∞–∂–¥–∞–Ω–∏–Ω–∞ | Terra Zetetica</title>
      </Head>

      <h1>‚úÖ –ß–µ–∫-–ª–∏—Å—Ç –≥—Ä–∞–∂–¥–∞–Ω–∏–Ω–∞ Terra Zetetica</h1>
      <p>
        –û—Ç–º–µ—á–∞–π –≥–∞–ª–æ—á–∫–∞–º–∏, –¥–æ–±–∞–≤–ª—è–π —Å–≤–æ–∏ –∑–∞–¥–∞—á–∏ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–π—Å—è –ø–æ–∑–∂–µ ‚Äî –≤—Å—ë —Å–æ—Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ –±—Ä–∞—É–∑–µ—Ä–µ!
      </p>

      {/* –ë–ª–æ–∫ ¬´–°–≤–æ—ë –∑–∞–¥–∞–Ω–∏–µ¬ª */}
      <section className="custom-tasks">
        <h2>‚úèÔ∏è –°–≤–æ—ë –∑–∞–¥–∞–Ω–∏–µ</h2>
        <div className="custom-input-wrapper">
          <input
            type="text"
            value={newTask}
            onChange={e => setNewTask(e.target.value)}
            placeholder="–í–≤–µ–¥–∏—Ç–µ –∑–∞–¥–∞—á—É..."
          />
          <button className="btn primary" onClick={handleAddCustomTask}>
            –î–æ–±–∞–≤–∏—Ç—å
          </button>
        </div>

        {customTasks.length > 0 && (
          <ul className="custom-tasks-list">
            {customTasks.map(task => (
              <li key={task.id}>
                <label>
                  <input
                    type="checkbox"
                    checked={task.done}
                    onChange={() => toggleCustomTask(task.id)}
                  />
                  <span className={task.done ? 'done' : ''}>{task.text}</span>
                </label>
                <button
                  className="delete-btn"
                  onClick={() => deleteCustomTask(task.id)}
                  title="–£–¥–∞–ª–∏—Ç—å –∑–∞–¥–∞—á—É"
                >
                  √ó
                </button>
              </li>
            ))}
          </ul>
        )}
      </section>

      {/* –û—Å–Ω–æ–≤–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã —á–µ–∫-–ª–∏—Å—Ç–∞ */}
      {checklistBlocks.map((block, i) => (
        <section key={i} className="block-section">
          <h2>{block.section}</h2>
          <h3>{block.subtitle}</h3>
          <ul className="block-list">
            {block.items.map((item, j) => {
              const id = `${i}-${j}`
              return (
                <li key={id}>
                  <label>
                    <input
                      type="checkbox"
                      checked={checked.includes(id)}
                      onChange={() => toggleItem(id)}
                    />
                    <span className={checked.includes(id) ? 'done' : ''}>
                      {item}
                    </span>
                  </label>
                </li>
              )
            })}
          </ul>
        </section>
      ))}

      <footer className="checklist-footer">
        <p>üß≠ –¢—ã ‚Äî —á–∞—Å—Ç—å —Å–º–µ–Ω—ã –ø–∞—Ä–∞–¥–∏–≥–º—ã. –í—Å—ë –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –æ–¥–Ω–æ–≥–æ —à–∞–≥–∞.<br />Supra Veritas Ordo.</p>
      </footer>
    </main>
  )
}
