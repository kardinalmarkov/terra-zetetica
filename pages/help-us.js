// pages/help-us.js
import Head from 'next/head'
import { useState, useEffect } from 'react'

const allTasks = [
  /* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ  ‚≠ê –ü–†–û–°–¢–´–ï  (1‚Äì3 ZETA, –¥–æ 15 –º–∏–Ω) ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
  { id: 1,  text: '–ü–æ—Å—Ç–∞–≤–∏—Ç—å –ª–∞–π–∫ üëç –Ω–∞ –ø–æ—Å—Ç TZ –≤–æ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ',       time: 5,  complexity: 'simple', zeta: 1,
    checklist: ['–û—Ç–∫—Ä—ã—Ç—å –ø–æ—Å—Ç', '–ù–∞–∂–∞—Ç—å ¬´–ú–Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è¬ª', '–ì–æ—Ç–æ–≤–æ'] },
  { id: 2,  text: '–ü–æ—Å—Ç–∞–≤–∏—Ç—å ‚≠ê –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ GitHub (terra-zetetica)', time: 5,  complexity: 'simple', zeta: 1,
    checklist: ['–ó–∞–π—Ç–∏ –Ω–∞ GitHub', '–û—Ç–∫—Ä—ã—Ç—å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π', '–ù–∞–∂–∞—Ç—å ¬´Star¬ª'] },
  { id: 3,  text: '–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ Telegram-–∫–∞–Ω–∞–ª TZ',               time: 3,  complexity: 'simple', zeta: 1,
    checklist: ['–û—Ç–∫—Ä—ã—Ç—å t.me/terra_zetetica', '–ù–∞–∂–∞—Ç—å ¬´Join¬ª', '–°–∫—Ä–∏–Ω—à–æ—Ç'] },
  { id: 4,  text: '–ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π –Ω–∞ —Å–∞–π—Ç TZ –≤ WhatsApp –≥—Ä—É–ø–ø–µ', time: 10, complexity: 'simple', zeta: 1,
    checklist: ['–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É', '–í—Å—Ç–∞–≤–∏—Ç—å –≤ –≥—Ä—É–ø–ø—É', '–û—Ç–ø—Ä–∞–≤–∏—Ç—å'] },
  { id: 5,  text: '–°–¥–µ–ª–∞—Ç—å —Ä–µ–ø–æ—Å—Ç –≤ VK-–∏—Å—Ç–æ—Ä–∏–∏ –æ –ø–ª–æ—Å–∫–æ–π –ó–µ–º–ª–µ',     time: 10, complexity: 'simple', zeta: 1,
    checklist: ['–ù–∞–π—Ç–∏ –∏—Å—Ç–æ—Ä–∏—é', '–ù–∞–∂–∞—Ç—å ¬´–ü–æ–¥–µ–ª–∏—Ç—å—Å—è¬ª', '–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å'] },
  { id: 6,  text: '–î–æ–±–∞–≤–∏—Ç—å terra-zetetica.org –≤ –∑–∞–∫–ª–∞–¥–∫–∏',          time: 5,  complexity: 'simple', zeta: 1,
    checklist: ['–û—Ç–∫—Ä—ã—Ç—å —Å–∞–π—Ç', '–ù–∞–∂–∞—Ç—å Ctrl+D', '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å'] },
  { id: 7,  text: '–û—Å—Ç–∞–≤–∏—Ç—å —ç–º–æ–¥–∑–∏-—Ä–µ–∞–∫—Ü–∏—é –≤ —á–∞—Ç–µ TZ',               time: 5,  complexity: 'simple', zeta: 1,
    checklist: ['–ó–∞–π—Ç–∏ –≤ —á–∞—Ç', '–í—ã–±—Ä–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ', '–ü–æ—Å—Ç–∞–≤–∏—Ç—å —Ä–µ–∞–∫—Ü–∏—é'] },
  { id: 8,  text: '–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å 3 –¥—Ä—É–∑–µ–π –≤ Telegram-—á–∞—Ç TZ',           time: 10, complexity: 'simple', zeta: 2,
    checklist: ['–û—Ç–∫—Ä—ã—Ç—å —á–∞—Ç', '–ù–∞–∂–∞—Ç—å ¬´–î–æ–±–∞–≤–∏—Ç—å¬ª', '–í—ã–±—Ä–∞—Ç—å 3 –∫–æ–Ω—Ç–∞–∫—Ç–∞'] },
  { id: 9,  text: '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ–±–æ–∏ ‚ÄúFlat Earth‚Äù –Ω–∞ —Ä–∞–±–æ—á–∏–π —Å—Ç–æ–ª',      time: 10, complexity: 'simple', zeta: 2,
    checklist: ['–°–∫–∞—á–∞—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É', '–û—Ç–∫—Ä—ã—Ç—å —Å–≤–æ–π—Å—Ç–≤–∞ —Ñ–æ–Ω–∞', '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å'] },
  { id: 10, text: '–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º –±–∞–≥-—Ä–µ–ø–æ—Ä—Ç (1 —Å—Ç—Ä–æ–∫–∞)',    time: 10, complexity: 'simple', zeta: 2,
    checklist: ['–ù–∞–π—Ç–∏ –±–∞–≥', '–ö–æ—Ä–æ—Ç–∫–æ –æ–ø–∏—Å–∞—Ç—å', '–û—Ç–ø—Ä–∞–≤–∏—Ç—å —á–µ—Ä–µ–∑ —Ñ–æ—Ä–º—É'] },
  // ‚Ä¶ –ø—Ä–æ—Å—Ç—ã–µ –¥–æ id:20

  /* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ  üåü –°–†–ï–î–ù–ò–ï (5‚Äì10 ZETA, 15‚Äì60 –º–∏–Ω) ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
  { id: 21, text: '–°–æ–∑–¥–∞—Ç—å –º–µ–º –æ –ø–ª–æ—Å–∫–æ–π –ó–µ–º–ª–µ –≤ Canva',                time: 40, complexity: 'medium', zeta: 5,
    checklist: ['–û—Ç–∫—Ä—ã—Ç—å Canva', '–ù–∞—Ä–∏—Å–æ–≤–∞—Ç—å –º–µ–º', '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å PNG'] },
  { id: 22, text: '–ù–∞–ø–∏—Å–∞—Ç—å –ø–æ—Å—Ç (~200 —Å–ª–æ–≤) –Ω–∞ –•–∞–±—Ä –æ TZ',             time: 60, complexity: 'medium', zeta: 8,
    checklist: ['–ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è', '–ù–∞–ø–∏—Å–∞—Ç—å —Ç–µ–∫—Å—Ç', '–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å'] },
  // ‚Ä¶ —Å—Ä–µ–¥–Ω–∏–µ –¥–æ id:40

  /* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ  üöÄ –°–õ–û–ñ–ù–´–ï (15‚Äì20 ZETA, ‚â• 4 —á) ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
  { id: 41, text: '–ü–µ—Ä–µ–≤–µ—Å—Ç–∏ –≤–µ—Å—å —Å–∞–π—Ç –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π',                  time: 360, complexity: 'hard', zeta: 20,
    checklist: ['–°–∫–∞—á–∞—Ç—å i18n-—Ñ–∞–π–ª—ã', '–ü–µ—Ä–µ–≤–µ—Å—Ç–∏', 'PR –≤ GitHub'] },
  // ‚Ä¶ —Å–ª–æ–∂–Ω—ã–µ –¥–æ id:60
  // –∏ –¥–∞–ª–µ–µ –≤–ø–ª–æ—Ç—å –¥–æ 100, –ø–æ —Ç–æ–π –∂–µ —Å—Ö–µ–º–µ
]

export default function HelpUs() {
  const [favorites, setFavorites] = useState([])
  const [filterMax, setFilterMax] = useState(120)
  const [currentUrl, setCurrentUrl] = useState('')

  useEffect(() => {
    if (typeof window !== 'undefined') {
      setCurrentUrl(window.location.href)
      setFavorites(JSON.parse(localStorage.getItem('tz-favs') || '[]'))
    }
  }, [])

  function toggleFav(id) {
    const next = favorites.includes(id)
      ? favorites.filter(x => x !== id)
      : [...favorites, id]
    setFavorites(next)
    if (typeof window !== 'undefined') {
      localStorage.setItem('tz-favs', JSON.stringify(next))
    }
  }

  const filtered = allTasks.filter(t => t.time <= filterMax)
  const levels = [
    { key: 'simple', title: '‚≠ê –ü—Ä–æ—Å—Ç—ã–µ (–¥–æ 15‚Ä≤)' },
    { key: 'medium', title: 'üåü –°—Ä–µ–¥–Ω–∏–µ (15‚Ä≤‚Äì60‚Ä≤)' },
    { key: 'hard',   title: 'üöÄ –°–ª–æ–∂–Ω—ã–µ (–±–æ–ª—å—à–µ 1 —á)' },
  ]

  return (
    <>
      <Head>
        <title>–í–Ω–µ—Å—Ç–∏ –≤–∫–ª–∞–¥ | Terra Zetetica</title>
      </Head>
      <main className="wrapper">
        <h1>–í–Ω–µ—Å—Ç–∏ –≤–∫–ª–∞–¥ –≤ Terra Zetetica</h1>
        <p>–§–∏–ª—å—Ç—Ä –ø–æ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏ ¬´–∏–∑–±—Ä–∞–Ω–Ω–æ–µ¬ª —á–µ—Ä–µ–∑ ‚≠ê.</p>

        <div className="filter">
          <label>
            –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è: {filterMax <= 60 ? `${filterMax}‚Ä≤` : `${Math.floor(filterMax/60)} —á`}
          </label>
          <input
            type="range"
            min={10}
            max={480}
            step={5}
            value={filterMax}
            onChange={e => setFilterMax(+e.target.value)}
          />
        </div>

        {levels.map(({ key, title }) => (
          <section key={key}>
            <h2>{title}</h2>
            <div className="tasks-list">
              {filtered
                .filter(t => t.complexity === key)
                .map(t => (
                  <div key={t.id} className="task-card">
                    <div className="task-header">
                      {t.id}. {t.text}
                      <button onClick={() => toggleFav(t.id)}>
                        {favorites.includes(t.id) ? '‚òÖ' : '‚òÜ'}
                      </button>
                    </div>
                    <div className="task-meta">
                      ‚è± {t.time <= 60 ? `${t.time}‚Ä≤` : `${Math.floor(t.time/60)} —á`}  
                      +{t.zeta} ZETA
                      {currentUrl && (
                        <span className="share">
                          <a
                            href={`https://t.me/share/url?url=${encodeURIComponent(currentUrl)}&text=${encodeURIComponent(t.text)}`}
                            target="_blank"
                            rel="noopener noreferrer"
                          >Telegram</a>
                          {' | '}
                          <a
                            href={`https://wa.me/?text=${encodeURIComponent(t.text + ' ' + currentUrl)}`}
                            target="_blank"
                            rel="noopener noreferrer"
                          >WhatsApp</a>
                        </span>
                      )}
                    </div>
                    <details>
                      <summary>–ß—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å</summary>
                      <ul>
                        {t.checklist.map((step, i) => <li key={i}>{step}</li>)}
                      </ul>
                    </details>
                  </div>
                ))}
            </div>
          </section>
        ))}

        <section className="report">
          <h2>–û—Ç—á—ë—Ç –æ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á–∞—Ö</h2>
          <form action="https://formspree.io/f/—Ç–≤–æ–π_–∏–¥" method="POST">
            <input name="z_id" placeholder="Z-ID" required />
            <input name="task_ids" placeholder="–ó–∞–¥–∞—á–∏ (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é)" required />
            <input name="links" placeholder="–°—Å—ã–ª–∫–∏" required />
            <textarea name="comment" placeholder="–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)" />
            <button type="submit">–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>
          </form>
        </section>
      </main>

      <style jsx>{`
        .wrapper { max-width: 960px; margin: auto; padding: 2rem 1rem; }
        .filter { margin: 1rem 0; }
        .tasks-list { display: grid; gap: 1rem; }
        @media (min-width:600px) { .tasks-list { grid-template-columns:1fr 1fr } }
        .task-card { border:1px solid #ddd; padding:1rem; border-radius:4px; }
        .task-header { display:flex; justify-content:space-between; }
        .task-meta { font-size:.9rem; margin-top:.5rem; }
        .share a { margin-left:.5rem; font-size:.8rem; }
        .report { margin-top:2rem; padding:1rem; background:#f9f9f9; border-radius:4px; }
        form { display:grid; gap:1rem; max-width:600px; }
        input, textarea { padding:.75rem; border:1px solid #ccc; border-radius:4px; }
        button { padding:.75rem 1.5rem; background:#4caf50; color:#fff; border:none; border-radius:4px; }
      `}</style>
    </>
  )
}
