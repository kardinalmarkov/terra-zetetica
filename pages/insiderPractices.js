
import Head from 'next/head';
import { useState, useEffect } from 'react';

const checklistData = {
  positive: {
    title: 'üßò –ü—É—Ç—å –°–ª—É–∂–µ–Ω–∏—è –î—Ä—É–≥–∏–º (51%+)',
    description: '–ü—É—Ç—å —Å–≤–µ—Ç–∞, –∞–ª—å—Ç—Ä—É–∏–∑–º–∞ –∏ –æ—Ç–¥–∞—á–∏. –í–µ–¥—ë—Ç –∫ 4-–π –ø–æ–∑–∏—Ç–∏–≤–Ω–æ–π –ø–ª–æ—Ç–Ω–æ—Å—Ç–∏.',
    items: [
      '–°–¥–µ–ª–∞–ª —á—Ç–æ-—Ç–æ –±–µ—Å–∫–æ—Ä—ã—Å—Ç–Ω–æ –¥–ª—è –¥—Ä—É–≥–æ–≥–æ',
      '–£—Å–ª—ã—à–∞–ª –±–µ–∑ –æ—Å—É–∂–¥–µ–Ω–∏—è',
      '–ü–æ–¥–¥–µ—Ä–∂–∞–ª –≤ –º–æ–º–µ–Ω—Ç —Å–ª–∞–±–æ—Å—Ç–∏',
      '–°–º—è–≥—á–∏–ª –∫–æ–Ω—Ñ–ª–∏–∫—Ç',
      '–û—Ç–∫–∞–∑–∞–ª—Å—è –æ—Ç –ª–∏—á–Ω–æ–π –≤—ã–≥–æ–¥—ã —Ä–∞–¥–∏ –æ–±—â–µ–≥–æ –±–ª–∞–≥–∞'
    ]
  },
  negative: {
    title: 'üåÄ –ü—É—Ç—å –°–ª—É–∂–µ–Ω–∏—è –°–µ–±–µ (95%)',
    description: '–°–æ–∑–Ω–∞—Ç–µ–ª—å–Ω–∞—è –ø–æ–ª—è—Ä–∏–∑–∞—Ü–∏—è –Ω–∞ —Å–µ–±—è. –ö–æ–Ω—Ç—Ä–æ–ª—å, –≤–ª–∞—Å—Ç—å, —Ñ–æ–∫—É—Å –Ω–∞ —Å–µ–±–µ. –í–µ–¥—ë—Ç –∫ 4-–π –Ω–µ–≥–∞—Ç–∏–≤–Ω–æ–π –ø–ª–æ—Ç–Ω–æ—Å—Ç–∏.',
    items: [
      '–£—Ç–≤–µ—Ä–¥–∏–ª —Å–≤–æ—é –≤–æ–ª—é –Ω–∞–¥ –¥—Ä—É–≥–∏–º',
      '–ü–æ—Å—Ç–∞–≤–∏–ª —Å–µ–±—è –Ω–∞ –ø–µ—Ä–≤–æ–µ –º–µ—Å—Ç–æ',
      '–û—Ç–∫–∞–∑–∞–ª—Å—è —É—Å—Ç—É–ø–∏—Ç—å',
      '–ú–∞–Ω–∏–ø—É–ª–∏—Ä–æ–≤–∞–ª —Ä–∞–¥–∏ –≤—ã–≥–æ–¥—ã',
      '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–ª —Ä–µ—Å—É—Ä—Å –≤ —É—â–µ—Ä–± –¥—Ä—É–≥–∏–º'
    ]
  },
  observer: {
    title: '‚öñÔ∏è –ü—É—Ç—å –ù–∞–±–ª—é–¥–∞—Ç–µ–ª—è / –ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—è',
    description: '–ü—É—Ç—å –≥–ª—É–±–∏–Ω–Ω–æ–≥–æ –æ—Å–æ–∑–Ω–∞–Ω–∏—è –∏ –∞–Ω–∞–ª–∏–∑–∞. –í–µ–¥—ë—Ç –∫ –ø–æ–Ω–∏–º–∞–Ω–∏—é –ò–≥—Ä—ã.',
    items: [
      '–ù–∞–±–ª—é–¥–∞–ª —ç–º–æ—Ü–∏–∏ –±–µ–∑ –æ—Ü–µ–Ω–∫–∏',
      '–í—ë–ª –¥–Ω–µ–≤–Ω–∏–∫ –æ—Å–æ–∑–Ω–∞–Ω–∏–π',
      '–ù–µ –≤—Ç—è–Ω—É–ª—Å—è –≤ –∫–æ–Ω—Ñ–ª–∏–∫—Ç',
      '–ó–∞–º–µ—á–∞–ª –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è –ø–∞—Ç—Ç–µ—Ä–Ω—ã',
      '–ó–∞–¥–∞–≤–∞–ª—Å—è –≤–æ–ø—Ä–æ—Å–æ–º ¬´–∑–∞—á–µ–º —ç—Ç–æ –ø—Ä–∏—à–ª–æ?¬ª'
    ]
  }
};

export default function InsiderPractices() {
  const [checkedItems, setCheckedItems] = useState({});
  const [isMobile, setIsMobile] = useState(false);
  const [showIntro, setShowIntro] = useState(false);

  useEffect(() => {
    const handleResize = () => setIsMobile(window.innerWidth < 768);
    handleResize();
    window.addEventListener('resize', handleResize);

    const saved = localStorage.getItem('insider_progress');
    if (saved) setCheckedItems(JSON.parse(saved));

    return () => window.removeEventListener('resize', handleResize);
  }, []);

  useEffect(() => {
    localStorage.setItem('insider_progress', JSON.stringify(checkedItems));
  }, [checkedItems]);

  const toggle = (key, index) => {
    setCheckedItems(prev => {
      const section = prev[key] || [];
      return {
        ...prev,
        [key]: section.includes(index)
          ? section.filter(i => i !== index)
          : [...section, index]
      };
    });
  };

  const resetDay = () => {
    setCheckedItems({});
  };

  const countMarked = (key) => {
    return (checkedItems[key] || []).length;
  };

  return (
    <>
      <Head>
        <title>–ü—Ä–∞–∫—Ç–∏–∫–∞ –ò–Ω—Å–∞–π–¥–µ—Ä–∞ | Terra Zetetica</title>
      </Head>

      <main className="wrapper" style={{ maxWidth: 900, margin: '0 auto', padding: '2rem 1rem' }}>
        <h1>üß¨ –ü—Ä–∞–∫—Ç–∏–∫–∞ –ø–æ –û—Ç–∫—Ä–æ–≤–µ–Ω–∏—è–º –ò–Ω—Å–∞–π–¥–µ—Ä–∞</h1>

        <details style={{ marginBottom: '1.5rem' }}>
          <summary style={{ cursor: 'pointer', fontWeight: 500, fontSize: '1.05rem' }}>
            üìñ –û–ø–∏—Å–∞–Ω–∏–µ –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ 4D, –ñ–∞—Ç–≤—ã –∏ —Ç—Ä—ë—Ö –ø—É—Ç–µ–π
          </summary>
          <div style={{ marginTop: '1rem', lineHeight: '1.6' }}>
            <p><strong>üåÄ –¢—Ä–∏ –∏—Å—Ö–æ–¥–∞ –ø–æ—Å–ª–µ –ñ–∞—Ç–≤—ã:</strong><br />
            ‚Ä¢ 4D –ü–æ–∑–∏—Ç–∏–≤ ‚Äî –µ—Å–ª–∏ —Å–ª—É–∂–∏–ª –¥—Ä—É–≥–∏–º –Ω–∞ 51%+<br />
            ‚Ä¢ 4D –ù–µ–≥–∞—Ç–∏–≤ ‚Äî –µ—Å–ª–∏ —Å–ª—É–∂–∏–ª —Å–µ–±–µ –Ω–∞ 95%+<br />
            ‚Ä¢ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –≤ 3D ‚Äî –µ—Å–ª–∏ –æ—Å—Ç–∞–ª—Å—è –º–µ–∂–¥—É</p>

            <p><strong>üåó –ß—Ç–æ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –ø—É—Ç—å:</strong><br />
            ‚Ä¢ –¢–≤–æ—è –ø–æ–ª—è—Ä–∏–∑–∞—Ü–∏—è (–∫–æ–º—É —Ç—ã —Å–ª—É–∂–∏—à—å)<br />
            ‚Ä¢ –û—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç—å —Ä–æ–ª–∏ –≤ –ò–≥—Ä–µ<br />
            ‚Ä¢ –≠–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∞—è –≤–∏–±—Ä–∞—Ü–∏—è</p>

            <p><strong>üí° –ü—É—Ç—å –≤ —Å–≤–µ—Ç–ª—É—é 4D:</strong><br />
            ‚Ä¢ –°–ª—É–∂–∏ –¥—Ä—É–≥–∏–º, –¥–µ–π—Å—Ç–≤—É–π —Å –ª—é–±–æ–≤—å—é<br />
            ‚Ä¢ –û—Å–æ–∑–Ω–∞–π —Å–≤—è–∑—å —Å –ï–¥–∏–Ω—ã–º<br />
            ‚Ä¢ –ë—É–¥—å –±–æ–¥—Ä –∏ —á–µ—Å—Ç–µ–Ω –ø–µ—Ä–µ–¥ —Å–æ–±–æ–π</p>

            <p><strong>üåë –ü—É—Ç—å –≤ —Ç—ë–º–Ω—É—é 4D:</strong><br />
            ‚Ä¢ 95% —Å–ª—É–∂–µ–Ω–∏—è —Å–µ–±–µ<br />
            ‚Ä¢ –ö–æ–Ω—Ç—Ä–æ–ª—å, —Å–∏–ª–∞, —Å–æ–∑–Ω–∞—Ç–µ–ª—å–Ω–∞—è –∂–µ—Ä—Ç–≤–∞</p>

            <p><em>–ò—Å—Ç–∏–Ω–∞ –ø—Ä–æ—Å—Ç–∞: —Ö–æ—á–µ—à—å –≤—ã–π—Ç–∏ ‚Äî –≤—ã–±–µ—Ä–∏. –ù–µ—Ç –≤—ã–±–æ—Ä–∞ ‚Äî —Ü–∏–∫–ª –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è.</em></p>
            <p style={{ marginTop: '0.5rem' }}>
              üìò <a href="/materials/docs/–û—Ç–∫—Ä–æ–≤–µ–Ω–∏—è_–∏–Ω—Å–∞–π–¥–µ—Ä–∞.pdf" target="_blank" rel="noopener noreferrer">
                –°–∫–∞—á–∞—Ç—å –∫–Ω–∏–≥—É ¬´–û—Ç–∫—Ä–æ–≤–µ–Ω–∏—è –ò–Ω—Å–∞–π–¥–µ—Ä–∞¬ª
              </a>
            </p>
          </div>
        </details>

        <button
          onClick={resetDay}
          style={{ marginBottom: '2rem', background: '#eee', padding: '0.5rem 1rem', borderRadius: 6 }}
        >
          üîÑ –°–±—Ä–æ—Å–∏—Ç—å –æ—Ç–º–µ—Ç–∫–∏ –∑–∞ –¥–µ–Ω—å
        </button>

        {Object.entries(checklistData).map(([key, data]) => {
          const markedCount = countMarked(key);
          return (
            <div
              key={key}
              style={{ marginBottom: '3rem', padding: '1rem', border: '1px solid #ddd', borderRadius: 8 }}
            >
              <h2>{data.title}</h2>
              <p>{data.description}</p>
              {data.items.map((item, i) => (
                <label
                  key={i}
                  style={{ display: 'flex', alignItems: 'center', padding: '0.5rem 0' }}
                >
                  <input
                    type="checkbox"
                    checked={(checkedItems[key] || []).includes(i)}
                    onChange={() => toggle(key, i)}
                    style={{ marginRight: '0.75rem' }}
                  />
                  {item}
                </label>
              ))}
              <div style={{ marginTop: '1rem', fontWeight: 600 }}>
                ‚úÖ –û—Ç–º–µ—á–µ–Ω–æ: {markedCount} / {data.items.length}
              </div>
            </div>
          );
        })}

        <div style={{ padding: '1rem', borderTop: '1px solid #ccc' }}>
          <h2>üéØ –í–µ–∫—Ç–æ—Ä –ü—É—Ç–∏</h2>
          <p>–ü–æ—Å–º–æ—Ç—Ä–∏, –∫–∞–∫–æ–π —ç–Ω–µ—Ä–≥–∏–∏ –≤ —Ç–µ–±–µ –±—ã–ª–æ –±–æ–ª—å—à–µ —Å–µ–≥–æ–¥–Ω—è:</p>
          <ul>
            {Object.keys(checklistData).map(key => (
              <li key={key}>
                {checklistData[key].title}: {countMarked(key)} –æ—Ç–º–µ—Ç–æ–∫
              </li>
            ))}
          </ul>
        </div>
      </main>
    </>
  );
}
