import Head from 'next/head'
import { useState } from 'react'

export default function NewEnclavePage() {
  const [form, setForm] = useState({ zid: '', name: '', type: '', region: '', description: '', rules: '', image: '', coords: null })
  const [showPreview, setShowPreview] = useState(false)
  const [sent, setSent] = useState(false)

  const update = (e) => setForm({ ...form, [e.target.name]: e.target.value })

  const sendEnclave = () => {
    const body = `\n–ù–æ–≤—ã–π –∞–Ω–∫–ª–∞–≤ –æ—Ç ${form.zid}\n\n–ù–∞–∑–≤–∞–Ω–∏–µ: ${form.name}\n–¢–∏–ø: ${form.type}\n–†–µ–≥–∏–æ–Ω: ${form.region}\n–û–ø–∏—Å–∞–Ω–∏–µ: ${form.description}\n–ü—Ä–∞–≤–∏–ª–∞: ${form.rules}\n–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: ${form.coords ? `cx=${form.coords.x}, cy=${form.coords.y}` : '–Ω–µ —É–∫–∞–∑–∞–Ω—ã'}\n–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: ${form.image}`
    fetch("https://formspree.io/f/mbloweze", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ message: body })
    })
    setSent(true)
  }

  return (
    <main className="wrapper">
      <Head><title>üÜï –ù–æ–≤—ã–π –∞–Ω–∫–ª–∞–≤ | Terra Zetetica</title></Head>
      <h1 className="text-3xl font-bold mb-4">üÜï –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –∞–Ω–∫–ª–∞–≤–∞</h1>

      {!showPreview && !sent && (
        <form onSubmit={(e) => { e.preventDefault(); setShowPreview(true) }} className="space-y-4 max-w-xl bg-white border p-6 rounded-xl shadow-md">
          <input name="zid" value={form.zid} onChange={update} placeholder="Z-ID –∫—É—Ä–∞—Ç–æ—Ä–∞" required className="input w-full" />
          <input name="name" value={form.name} onChange={update} placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ –∞–Ω–∫–ª–∞–≤–∞ (–ø—Ä–∏–º–µ—Ä: –î–æ–º –ï–¥–∏–Ω—Å—Ç–≤–∞)" required className="input w-full" />

          <select name="type" value={form.type} onChange={update} required className="input w-full">
            <option value="">–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∞–Ω–∫–ª–∞–≤–∞</option>
            <option value="–ñ–∏–ª–æ–π">–ñ–∏–ª–æ–π</option>
            <option value="–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π">–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π</option>
            <option value="–ö—É–ª—å—Ç—É—Ä–Ω—ã–π">–ö—É–ª—å—Ç—É—Ä–Ω—ã–π</option>
            <option value="–ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π">–ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π</option>
          </select>

          <input name="region" value={form.region} onChange={update} placeholder="–†–µ–≥–∏–æ–Ω / –æ–±–ª–∞—Å—Ç—å / —Ä–∞–π–æ–Ω" required className="input w-full" />
          <textarea name="description" value={form.description} onChange={update} placeholder="–û–ø–∏—Å–∞–Ω–∏–µ –∞–Ω–∫–ª–∞–≤–∞, —Ü–µ–ª–∏, –∫–æ–º—É –¥–æ—Å—Ç—É–ø–µ–Ω, —á—Ç–æ —Ç–∞–º –º–æ–∂–Ω–æ –¥–µ–ª–∞—Ç—å" rows={4} required className="textarea w-full" />

          <div>
            <label className="font-semibold block mb-1">üìç –£–∫–∞–∂–∏—Ç–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã (–Ω–∞–∂–º–∏—Ç–µ –ø–æ –∫–∞—Ä—Ç–µ):</label>
            <div className="bg-gray-100 p-3 rounded text-sm">
              {form.coords ? `cx=${form.coords.x}, cy=${form.coords.y}` : '–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –µ—â—ë –Ω–µ –≤—ã–±—Ä–∞–Ω—ã.'}
            </div>
            <svg viewBox="0 0 1000 1000" className="w-full mt-2 border rounded shadow-md cursor-crosshair"
              onClick={(e) => {
                const bounds = e.currentTarget.getBoundingClientRect()
                const x = Math.round(e.clientX - bounds.left)
                const y = Math.round(e.clientY - bounds.top)
                setForm({ ...form, coords: { x, y } })
              }}>
              <image href="/images/terra-map-2d.webp" x="0" y="0" width="1000" height="1000" />
            </svg>
          </div>

          <input name="rules" value={form.rules} onChange={update} placeholder="–ü—Ä–∞–≤–∏–ª–∞ –∞–Ω–∫–ª–∞–≤–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å)" className="input w-full" />
          <input name="image" value={form.image} onChange={update} placeholder="–°—Å—ã–ª–∫–∞ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∞–Ω–∫–ª–∞–≤–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å)" className="input w-full" />

          <button type="submit" className="btn primary w-full bg-yellow-400 hover:bg-yellow-500 text-black font-semibold py-2 rounded">üìÑ –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –∞–Ω–∫–ª–∞–≤–∞</button>
        </form>
      )}

      {showPreview && !sent && (
        <div className="bg-white border rounded p-6 mt-6 shadow-lg max-w-xl">
          <h2 className="text-xl font-bold mb-2">üìÑ –ü—Ä–µ–≤—å—é –∞–Ω–∫–ª–∞–≤–∞</h2>
          <p><strong>–ù–∞–∑–≤–∞–Ω–∏–µ:</strong> {form.name}</p>
          <p><strong>Z-ID:</strong> {form.zid}</p>
          <p><strong>–¢–∏–ø:</strong> {form.type}</p>
          <p><strong>–†–µ–≥–∏–æ–Ω:</strong> {form.region}</p>
          <p><strong>–û–ø–∏—Å–∞–Ω–∏–µ:</strong> {form.description}</p>
          <p><strong>–ü—Ä–∞–≤–∏–ª–∞:</strong> {form.rules || '‚Äî'}</p>
          <p><strong>–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã:</strong> {form.coords ? `cx=${form.coords.x}, cy=${form.coords.y}` : '‚Äî'}</p>
          {form.image && <img src={form.image} alt="–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∞–Ω–∫–ª–∞–≤–∞" className="mt-2 rounded shadow max-w-xs" />}

          <div className="mt-4 space-x-2">
            <button onClick={sendEnclave} className="btn bg-yellow-400 hover:bg-yellow-500 text-black font-semibold px-4 py-2 rounded">üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É</button>
            <button onClick={() => setShowPreview(false)} className="btn bg-gray-200 hover:bg-gray-300 text-black font-medium px-4 py-2 rounded">‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è</button>
          </div>
        </div>
      )}

      {sent && (
        <div className="bg-green-100 border border-green-400 rounded p-6 mt-6 text-center max-w-xl">
          <h2 className="text-xl font-bold mb-2">‚úÖ –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞</h2>
          <p>–°–ø–∞—Å–∏–±–æ! –ê–Ω–∫–ª–∞–≤ –±—É–¥–µ—Ç —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω –∫–æ–º–∞–Ω–¥–æ–π Terra Zetetica.</p>
        </div>
      )}
    </main>
  )
}
