// pages/enclaves/map.js
import Head from 'next/head'
import { useState, useRef, useEffect } from 'react'
import dynamic from 'next/dynamic'

// ‚¨áÔ∏è SVG-viewer –±–µ—Ä—ë–º –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏, —á—Ç–æ–±—ã Next.js –Ω–µ –ø—ã—Ç–∞–ª—Å—è
//     –≤—ã–ø–æ–ª–Ω–∏—Ç—å –µ–≥–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ (—Ç–∞–º –Ω–µ—Ç window, –ø–æ—ç—Ç–æ–º—É –ø–∞–¥–∞–µ—Ç)
const UncontrolledReactSVGPanZoom = dynamic(
  () =>
    import('react-svg-pan-zoom').then(
      mod => mod.UncontrolledReactSVGPanZoom
    ),
  { ssr: false }
)

// ‚ö†Ô∏è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –¥–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ 1000√ó1000 px (–ø–æ–¥ –∫–∞—Ä—Ç–∏–Ω–∫—É)
const enclaves = [
  {
    id: 'TZ-SPB-DOMISTINY',
    name: '–î–æ–º –ò—Å—Ç–∏–Ω—ã',
    coords: { x: 540, y: 470 },
    color: '#f43f5e',
    description: '–ñ–∏–ª–æ–π –∞–Ω–∫–ª–∞–≤ –≤ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥–µ',
    curatorZid: 'ZID-0001',
    temp: '+17 ¬∞C'
  },
  {
    id: 'TZ-BY-BRST-ULY-002',
    name: '–°–≤–µ—Ç–ª—ã–π –£–ª–µ–π',
    coords: { x: 555, y: 480 },
    color: '#10b981',
    description: '–ê–≥—Ä–∞—Ä–Ω–æ-–∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –¥–æ–º –≤ –ë—Ä–µ—Å—Ç—Å–∫–æ–π –æ–±–ª.',
    curatorZid: 'ZID-0002',
    temp: '+19 ¬∞C'
  }
]

export default function EnclaveMap () {
  const viewer = useRef(null)
  const [active, setActive] = useState(null)

  // –∫–æ–≥–¥–∞ viewer —Å–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω ‚Äî —Å—Ä–∞–∑—É Fit-to-Viewer
  useEffect(() => {
    if (viewer.current) viewer.current.fitToViewer()
  }, [])

  return (
    <main className='wrapper'>
      <Head><title>üß≠ –ö–∞—Ä—Ç–∞ –∞–Ω–∫–ª–∞–≤–æ–≤ | Terra Zetetica</title></Head>

      <h1 style={{ textAlign: 'center', margin: '1.4rem 0' }}>üß≠ –ö–∞—Ä—Ç–∞ –∞–Ω–∫–ª–∞–≤–æ–≤</h1>

      <div style={{ width: '100%', maxWidth: 1000, margin: '0 auto' }}>
        <UncontrolledReactSVGPanZoom
          ref={viewer}
          width={1000}
          height={600}
          detectAutoPan={false}
          toolbarProps={{ position: 'none' }}
          miniatureProps={{ position: 'none' }}
          background='#ffffff'
        >
          <svg width={1000} height={1000}>
            {/* –∫–∞—Ä—Ç–∏–Ω–∫–∞ –∫–∞—Ä—Ç—ã –ì–ª–∏—Å–æ–Ω–∞ */}
            <image
              href='/images/terra-map-2d.webp'
              x='0'
              y='0'
              width='1000'
              height='1000'
            />

            {/* —Ç–æ—á–∫–∏-–∞–Ω–∫–ª–∞–≤—ã */}
            {enclaves.map(e => (
              <g
                key={e.id}
                onClick={ev => {
                  // –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º SVG-–∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≤ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —ç–∫—Ä–∞–Ω–∞,
                  // —á—Ç–æ–±—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞—Ç—å pop-up
                  const pt = ev.target.ownerSVGElement.createSVGPoint()
                  pt.x = e.coords.x
                  pt.y = e.coords.y
                  const { x, y } = pt.matrixTransform(
                    ev.target.getScreenCTM()
                  )
                  setActive({ ...e, screen: { x, y } })
                }}
                style={{ cursor: 'pointer' }}
              >
                <circle
                  cx={e.coords.x}
                  cy={e.coords.y}
                  r='10'
                  fill={e.color}
                  stroke='#222'
                  strokeWidth='1'
                />
              </g>
            ))}
          </svg>
        </UncontrolledReactSVGPanZoom>
      </div>

      {/* pop-up –∞–Ω–∫–ª–∞–≤–∞ */}
      {active && (
        <div
          style={{
            position: 'fixed',
            top: active.screen.y + 12,
            left: active.screen.x + 12,
            maxWidth: 260,
            background: '#fff',
            border: '1px solid #ccc',
            borderRadius: 6,
            padding: '0.9rem',
            boxShadow: '0 4px 12px rgba(0,0,0,0.15)',
            zIndex: 100
          }}
        >
          <strong style={{ fontSize: 16 }}>{active.name}</strong>
          <div style={{ fontSize: 13, margin: '.35rem 0' }}>
            {active.description}
          </div>
          <div style={{ fontSize: 13 }}>
            üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:&nbsp;<b>{active.temp}</b>
          </div>
          <div style={{ fontSize: 12, color: '#666' }}>üÜî {active.id}</div>

          <div
            style={{
              marginTop: '.8rem',
              display: 'flex',
              gap: '.5rem',
              alignItems: 'center'
            }}
          >
            <a
              href={`/enclaves/${active.id}`}
              className='btn primary'
              style={{ padding: '.35rem .8rem', fontSize: 13 }}
            >
              –ü–æ–¥—Ä–æ–±–Ω–µ–µ ‚Üí
            </a>
            <button
              onClick={() => setActive(null)}
              style={{
                marginLeft: 'auto',
                fontSize: 18,
                background: 'none',
                border: 'none',
                cursor: 'pointer',
                lineHeight: 1
              }}
            >
              ‚úñ
            </button>
          </div>
        </div>
      )}

      <p
        style={{
          textAlign: 'center',
          fontSize: 14,
          marginTop: 18,
          color: '#555'
        }}
      >
        üìç –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —É—Å–ª–æ–≤–Ω—ã. –ö–∞—Ä—Ç–∞ ‚Äî —Å—Ö–µ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–µ–∫—Ü–∏—è –ø–æ–¥ –ö—É–ø–æ–ª–æ–º.
      </p>

      <div style={{ textAlign: 'center', marginTop: 24 }}>
        <a href='/enclaves' className='btn primary'>
          ‚Üê –ù–∞–∑–∞–¥ –∫ –∞–Ω–∫–ª–∞–≤–∞–º
        </a>
      </div>
    </main>
  )
}
