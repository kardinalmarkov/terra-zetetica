import Head from 'next/head'
import { useState } from 'react'
import Link from 'next/link'

const enclaves = [
  {
    id: 'TZ-SPB-DOMISTINY',
    name: '–î–æ–º –ò—Å—Ç–∏–Ω—ã',
    coords: { x: 434, y: 370 },
    color: '#f43f5e',
    type: 'üè° –ñ–∏–ª–æ–π',
    description: '–ñ–∏–ª–æ–π –∞–Ω–∫–ª–∞–≤ –≤ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥–µ. –û—Ç–∫—Ä—ã—Ç –ø–æ –∑–∞–ø—Ä–æ—Å—É.',
    curatorZid: 'ZID-0001'
  },
  {
    id: 'TZ-BY-BRST-ULY-002',
    name: '–°–≤–µ—Ç–ª—ã–π –£–ª–µ–π',
    coords: { x: 424, y: 366 },
    color: '#10b981',
    type: 'üõñ –ü–æ—Å–µ–ª–µ–Ω–∏–µ',
    description: '–î–æ–º –≤ –ë—Ä–µ—Å—Ç—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏. –ú–æ–∂–Ω–æ –∂–∏—Ç—å –∏ —Ä–∞–∑–≤–∏–≤–∞—Ç—å –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—ã.',
    curatorZid: 'ZID-0001'
  }
]

export default function MapPage() {
  const [active, setActive] = useState(null)

  const handleClick = (e) => {
    const bounds = e.currentTarget.getBoundingClientRect()
    const x = Math.round(e.clientX - bounds.left)
    const y = Math.round(e.clientY - bounds.top)
    // alert(`üìç –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: cx=${x}, cy=${y}`) // –ø–æ –∂–µ–ª–∞–Ω–∏—é –æ—Å—Ç–∞–≤–∏—Ç—å
  }

  return (
    <main className="wrapper">
      <Head><title>üß≠ –ö–∞—Ä—Ç–∞ –∞–Ω–∫–ª–∞–≤–æ–≤ | Terra Zetetica</title></Head>

      <h1 className="text-3xl font-bold text-center my-6">üß≠ –ö–∞—Ä—Ç–∞ –∞–Ω–∫–ª–∞–≤–æ–≤</h1>

      <div className="relative flex justify-center">
        <svg
          viewBox="0 0 1000 1000"
          className="w-full max-w-4xl bg-white border rounded-xl shadow-md"
          onClick={handleClick}
        >
          <image href="/images/terra-map-2d.webp" x="0" y="0" width="1000" height="1000" />

          {enclaves.map((e, i) => (
            <circle
              key={i}
              cx={e.coords.x}
              cy={e.coords.y}
              r="12"
              fill={e.color}
              className="cursor-pointer"
              onClick={() => setActive(e)}
            />
          ))}
        </svg>

        {active && (
          <div
            className="absolute bg-white border rounded shadow-lg p-4 text-sm max-w-sm z-10"
            style={{
              top: active.coords.y * 0.75,
              left: active.coords.x * 0.72
            }}
          >
            <div className="font-semibold text-lg mb-1">{active.name}</div>
            <div className="mb-1">{active.type}</div>
            <p className="mb-1">{active.description}</p>
            <p className="mb-2 text-gray-600 text-sm">üß≠ ID: {active.id}</p>
            <div className="space-x-2">
              <Link href={`/enclaves/${active.id}`}>
                <span className="inline-block px-3 py-1 bg-blue-500 text-white rounded hover:bg-blue-600">
                  –ü–æ–¥—Ä–æ–±–Ω–µ–µ ‚Üí
                </span>
              </Link>
              <form method="POST" action="https://formspree.io/f/mbloweze" target="_blank" className="inline">
                <input type="hidden" name="zid" value={active.curatorZid} />
                <button className="inline-block px-3 py-1 bg-gray-300 text-black rounded hover:bg-gray-400">
                  üì¨ –°–≤—è–∑–∞—Ç—å—Å—è
                </button>
              </form>
              <button onClick={() => setActive(null)} className="inline-block px-3 py-1 text-gray-500 hover:text-black">
                ‚úñ
              </button>
            </div>
          </div>
        )}
      </div>

      <p className="text-center text-sm mt-4 text-gray-500">
        üìç –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —É—Å–ª–æ–≤–Ω—ã. –ö–∞—Ä—Ç–∞ ‚Äî —Å—Ö–µ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–µ–∫—Ü–∏—è –ø–æ–¥ –ö—É–ø–æ–ª–æ–º.
      </p>

      <div className="text-center mt-6">
        <Link href="/enclaves">
          <span className="inline-block px-4 py-2 bg-yellow-400 text-black font-semibold rounded hover:bg-yellow-500 transition">
            ‚Üê –ù–∞–∑–∞–¥ –∫ –∞–Ω–∫–ª–∞–≤–∞–º
          </span>
        </Link>
      </div>
    </main>
  )
}
