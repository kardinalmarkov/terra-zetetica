// pages/enclaves/map.js
import Head from 'next/head';
import { useState, useRef } from 'react';
import { Viewer } from '../../components/Viewer'; // –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –∏–º–ø–æ—Ä—Ç —Å–æ ssr:false

// –°–ø–∏—Å–æ–∫ –∞–Ω–∫–ª–∞–≤–æ–≤ —Å –∏—Ö –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏ (—É—Å–ª–æ–≤–Ω–∞—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ 1000√ó1000)
const enclaves = [
  {
    id: 'TZ-SPB-DOMISTINY',
    name: '–î–æ–º –ò—Å—Ç–∏–Ω—ã',
    descr: '–ñ–∏–ª–æ–π –∞–Ω–∫–ª–∞–≤ –≤ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥–µ',
    color: '#f43f5e',
    x: 540,
    y: 470,
    temp: '+17 ¬∞C',
  },
  {
    id: 'TZ-BY-BRST-ULY-002',
    name: '–°–≤–µ—Ç–ª—ã–π –£–ª–µ–π',
    descr: '–ê–≥—Ä–∞—Ä–Ω–æ-–∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –¥–æ–º –≤ –ë—Ä–µ—Å—Ç—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏',
    color: '#10b981',
    x: 555,
    y: 480,
    temp: '+19 ¬∞C',
  },
  // ... –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –µ—â—ë –∞–Ω–∫–ª–∞–≤–æ–≤
];

export default function EnclaveMap() {
  const viewerRef = useRef(null);
  const [popup, setPopup] = useState(null);

  return (
    <main className="wrapper">
      <Head>
        <title>üó∫Ô∏è –ö–∞—Ä—Ç–∞ –∞–Ω–∫–ª–∞–≤–æ–≤ | Terra Zetetica</title>
      </Head>

      <h1 style={{ textAlign: 'center', margin: '1.4rem 0' }}>
        üó∫Ô∏è –ö–∞—Ä—Ç–∞ –∞–Ω–∫–ª–∞–≤–æ–≤
      </h1>

      <Viewer
        ref={viewerRef}
        width={1000}
        height={600}
        detectAutoPan={false}
        toolbarProps={{ position: 'none' }}
        miniatureProps={{ position: 'none' }}
        // –ö–∞–∫ —Ç–æ–ª—å–∫–æ SVG –∑–∞–≥—Ä—É–∑–∏–ª—Å—è, —Ü–µ–Ω—Ç—Ä–∏—Ä—É–µ–º / –º–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º –ø–æ–¥ –æ–∫–Ω–æ
        onSVGLoad={(viewerInstance) => {
          // –¢–µ–ø–µ—Ä—å –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –¥–æ—Å—Ç—É–ø–µ–Ω –º–µ—Ç–æ–¥ fitToViewer
          viewerInstance.fitToViewer();
        }}
        background="#ffffff"
      >
        <svg width="1000" height="1000">
          {/* –°–∞–º —Ñ–æ–Ω/–∫–∞—Ä—Ç–∏–Ω–∫–∞ –∫–∞—Ä—Ç—ã –ø–æ–¥ –ö—É–ø–æ–ª–æ–º */}
          <image
            href="/images/terra-map-2d.webp"
            width="1000"
            height="1000"
          />

          {enclaves.map((e) => (
            <g
              key={e.id}
              onClick={(evt) => {
                // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∞–Ω–∫–ª–∞–≤–∞ –≤ —ç–∫—Ä–∞–Ω–Ω—ã–µ (screen x,y)
                const pt = evt.target.ownerSVGElement.createSVGPoint();
                pt.x = e.x;
                pt.y = e.y;
                const { x, y } = pt.matrixTransform(
                  evt.target.getScreenCTM()
                );
                setPopup({ ...e, screen: { x, y } });
              }}
              style={{ cursor: 'pointer' }}
            >
              <circle
                cx={e.x}
                cy={e.y}
                r="10"
                fill={e.color}
                stroke="#222"
                strokeWidth="1"
              />
            </g>
          ))}
        </svg>
      </Viewer>

      {/* –í—ã–≤–æ–¥–∏–º pop-up, –µ—Å–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω popup */}
      {popup && (
        <div
          style={{
            position: 'fixed',
            top: popup.screen.y + 12,
            left: popup.screen.x + 12,
            maxWidth: 260,
            background: '#fff',
            border: '1px solid #ccc',
            borderRadius: 6,
            padding: '0.9rem',
            boxShadow: '0 4px 12px rgba(0,0,0,.15)',
            zIndex: 100,
          }}
        >
          <strong>{popup.name}</strong>
          <div style={{ fontSize: 13, margin: '.35rem 0' }}>
            {popup.descr}
          </div>
          <div style={{ fontSize: 13 }}>üå° {popup.temp}</div>
          <small style={{ color: '#666' }}>üÜî {popup.id}</small>

          <div
            style={{
              marginTop: '.8rem',
              display: 'flex',
              gap: '.5rem',
            }}
          >
            <a
              href={`/enclaves/${popup.id}`}
              className="btn primary"
              style={{ fontSize: 13, padding: '.35rem .8rem' }}
            >
              –ü–æ–¥—Ä–æ–±–Ω–µ–µ ‚Üí
            </a>
            <button
              onClick={() => setPopup(null)}
              style={{
                marginLeft: 'auto',
                background: 'none',
                border: 'none',
                fontSize: 18,
                cursor: 'pointer',
              }}
            >
              ‚úñ
            </button>
          </div>
        </div>
      )}

      <p
        style={{
          textAlign: 'center',
          fontSize: 14,
          marginTop: 18,
          color: '#555',
        }}
      >
        üìç –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —É—Å–ª–æ–≤–Ω—ã. –ö–∞—Ä—Ç–∞ ‚Äî —Å—Ö–µ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–µ–∫—Ü–∏—è –ø–æ–¥ –ö—É–ø–æ–ª–æ–º.
      </p>
    </main>
  );
}
