// pages/challenge.js            v3.2 ‚Ä¢ 18 Jun 2025
//
// ‚ñ∏ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –∏–∑ –¥–≤—É—Ö –ø—Ä–∞–≤–∏–ª —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
//     ‚ë† ¬´—Å –º–æ–º–µ–Ω—Ç–∞ —Å—Ç–∞—Ä—Ç–∞ + 24 —á¬ª
//     ‚ë° ¬´–ø—Ä–µ–¥—ã–¥—É—â–∏–π –¥–µ–Ω—å –∑–∞–∫—Ä—ã—Ç¬ª
// ‚ñ∏ watched_at —Ñ–∏–∫—Å–∏—Ä—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –æ–¥–Ω–∞–∂–¥—ã (—Å–º. /api/challenge/mark.js)
// ‚ñ∏ –ø–æ—Å–ª–µ ¬´–ú–∞—Ç–µ—Ä–∏–∞–ª –∏–∑—É—á–µ–Ω¬ª –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –¥–Ω—é
// ‚ñ∏ –Ω–∞ 14-–º –¥–Ω–µ –ø–æ–∑–¥—Ä–∞–≤–ª—è–µ–º –∏ –≤–µ–¥—ë–º –≤ –õ–ö (‚Üó –≤–∫–ª–∞–¥–∫–∞ progress)

import { useState, useEffect } from 'react'
import { useRouter }          from 'next/router'
import Head                   from 'next/head'
import Link                   from 'next/link'
import DayMaterial            from '../components/DayMaterial'
import useMe                  from '../utils/useMe'

/* ----------------------- SSR ----------------------- */
export async function getServerSideProps({ query, req }) {
  const { tg, cid } = (await import('cookie')).parse(req.headers.cookie ?? '')
  if (!tg || !cid)
    return { redirect: { destination: '/lk', permanent: false } }

  const day = Math.min(Math.max(+query.day || 1, 1), 14)
  const { supabase } = await import('../lib/supabase')

  /* –º–∞—Ç–µ—Ä–∏–∞–ª + –∑–∞–º–µ—Ç–∫–∞/–ø—Ä–æ—Å–º–æ—Ç—Ä + –≤–µ—Å—å –ø—Ä–æ–≥—Ä–µ—Å—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */
  const [matRsp, curRsp, allRsp, citRsp] = await Promise.all([
    supabase.from('daily_materials')
            .select('*')
            .eq('day_no', day)
            .maybeSingle(),

    supabase.from('daily_progress')
            .select('notes, watched_at')
            .match({ citizen_id: cid, day_no: day })
            .maybeSingle(),

    supabase.from('daily_progress')
            .select('day_no, watched_at')
            .eq('citizen_id', cid),

    supabase.from('citizens')
            .select('challenge_started_at')
            .eq('id', cid)
            .single()
  ])

  const mat   = matRsp.data
  const prg   = curRsp.data
  const all   = allRsp.data || []
  const start = citRsp.data?.challenge_started_at
             || all.find(r => r.day_no === 1)?.watched_at
             || null                                // –º–æ–∂–µ—Ç –±—ã—Ç—å null

  if (!mat)
    return { redirect: { destination: '/lk?tab=progress', permanent: false } }

  /* ---- –≤—ã—á–∏—Å–ª—è–µ–º —Ä–∞–∑—Ä–µ—à—ë–Ω–Ω—ã–π –º–∞–∫—Å–∏–º—É–º –¥–Ω—è ---- */
  const elapsedHours = start ? (Date.now() - new Date(start)) / 3.6e6 : 0
  const byTime       = start ? Math.floor(elapsedHours / 24) + 1 : 1
  const lastDone     = all.reduce((m, r) =>
                      r.watched_at ? Math.max(m, r.day_no) : m, 0)
  const byDone       = lastDone + 1
  const allowedDay   = Math.max(byTime, byDone)

  if (day > allowedDay ||
      (day > 1 && !all.find(r => r.day_no === day - 1 && r.watched_at)))
    return { redirect: { destination: '/lk?tab=progress', permanent: false } }

  return {
    props: {
      dayNo   : day,
      material: { ...mat, notes: prg?.notes ?? '' },
      watched : Boolean(prg?.watched_at)
    }
  }
}

/* ----------------------- CSR ----------------------- */
export default function ChallengePage({ dayNo, material, watched }) {
  const router           = useRouter()
  const { mutate }       = useMe()                 // –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è /api/me
  const [isDone,setDone] = useState(watched)
  const [note,setNote]   = useState(material.notes)
  const [saved,setSaved] = useState(false)

  /* —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –Ω–∞ —Å–º–µ–Ω—É URL */
  useEffect(() => {
    setDone(watched)
    setNote(material.notes)
    setSaved(false)
  }, [router.asPath])                             // eslint-disable-line

  /* –∫–æ–Ω—Ñ–µ—Ç—Ç–∏ –ø—Ä–∏ —Ñ–∏–Ω–∞–ª–µ */
  useEffect(() => {
    if (isDone && dayNo === 14)
      import('canvas-confetti')
        .then(m => m.default({ particleCount: 180, spread: 70 }))
  }, [isDone, dayNo])

  /* POST ‚Üí /api/challenge/mark */
  async function submit({ saveOnly = false } = {}) {
    const r = await fetch('/api/challenge/mark', {
      method : 'POST',
      headers: { 'Content-Type': 'application/json' },
      body   : JSON.stringify({ day: dayNo, note, saveOnly })
    }).then(r => r.json())

    if (r.ok) {
      if (!saveOnly) setDone(true)
      setSaved(true); setTimeout(() => setSaved(false), 2000)
      mutate()                                     // –ø–µ—Ä–µ—Ä–∏—Å—É–µ–º –õ–ö
    } else alert('–û—à–∏–±–∫–∞: ' + (r.error || 'unknown'))
  }

  return (
    <main style={{ maxWidth: 920, margin: '0 auto', padding: '1rem' }}>
      <Head><title>–î–µ–Ω—å {dayNo} ‚Ä¢ Terra Zetetica</title></Head>

      <DayMaterial material={material} />

      {/* 14 –∫—Ä—É–∂–∫–æ–≤ */}
      <div style={{ display: 'flex', gap: 6, margin: '22px 0' }}>
        {Array.from({ length: 14 }).map((_, i) => (
          <span key={i} style={{
            width: 12, height: 12, borderRadius: '50%',
            background:
              i < dayNo - 1 || (i === dayNo - 1 && isDone) ? '#28a745' : '#ccc'
          }} />
        ))}
      </div>

      {/* –∑–∞–º–µ—Ç–∫–∞ */}
      <h3 style={{ margin: '26px 0 6px' }}>üìù –í–∞—à–∞ –∑–∞–º–µ—Ç–∫–∞</h3>
      <textarea rows={4} maxLength={1000}
        style={{ width: '100%', marginBottom: 10 }}
        value={note}
        onChange={e => setNote(e.target.value)}
      />

      {/* –∫–Ω–æ–ø–∫–∏ */}
      <div style={{ display: 'flex', gap: 14, flexWrap: 'wrap' }}>
        <button className="btn primary"
                onClick={() => submit({ saveOnly: true })}>
          üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∑–∞–º–µ—Ç–∫—É
        </button>
        {saved && <span style={{ color: '#28a745', fontWeight: 600 }}>‚úîÔ∏è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ</span>}

        {!isDone && (
          <button className="btn primary" onClick={() => submit()}>
            ‚úÖ –ú–∞—Ç–µ—Ä–∏–∞–ª –∏–∑—É—á–µ–Ω
          </button>
        )}
      </div>

      {/* –Ω–∞–≤–∏–≥–∞—Ü–∏—è —Å–Ω–∏–∑—É */}
      <nav style={{
        marginTop: 34, display: 'flex',
        justifyContent: 'space-between', fontSize: 18
      }}>
        <button className="btn-link" onClick={() => router.back()}>‚Üê –ù–∞–∑–∞–¥</button>

        <Link href="/lk?tab=progress" className="btn-link" scroll={false}>üìà</Link>

        {dayNo < 14 && isDone && (
          <Link href={`/challenge?day=${dayNo + 1}`}
                className="btn-link" scroll={false}>
            –¥–µ–Ω—å {dayNo + 1} ‚Üí
          </Link>
        )}
      </nav>

      {/* —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –±–ª–æ–∫ */}
      {dayNo === 14 && isDone && (
        <p style={{ marginTop: 26, fontSize: 18, color: 'green' }}>
          üéâ –í—ã –ø—Ä–æ—à–ª–∏ –≤—Å–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã!&nbsp;
          –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤&nbsp;
          <Link href="/lk?tab=progress"><a>–ª–∏—á–Ω—ã–π&nbsp;–∫–∞–±–∏–Ω–µ—Ç</a></Link>,<br />
          —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ ¬´—à–∞—Ä–∞¬ª.
        </p>
      )}
    </main>
  )
}
