// pages/challenge.js
//
// –°—Ç—Ä–∞–Ω–∏—Ü–∞ –æ–¥–Ω–æ–≥–æ –¥–Ω—è —á–µ–ª–ª–µ–Ω–¥–∂–∞: —Ç–æ–ª—å–∫–æ –æ—Ç–º–µ—Ç–∫–∞ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ–≥–æ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∏.
// –£–±–∏—Ä–∞–µ–º –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã/–æ—Ç–≤–µ—Ç—ã ‚Äî –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∫–ª–∏–∫–∞–µ—Ç ¬´‚úîÔ∏è –Ø –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ –∏–∑—É—á–∏–ª –º–∞—Ç–µ—Ä–∏–∞–ª¬ª
// –∏ –ø—Ä–∏ –∂–µ–ª–∞–Ω–∏–∏ –æ—Å—Ç–∞–≤–ª—è–µ—Ç —Å–≤–æ–∏ –∑–∞–º–µ—Ç–∫–∏.

import Head             from 'next/head'
import { parse }        from 'cookie'
import { supabase }     from '../lib/supabase'
import DayMaterial     from '../components/DayMaterial'
import { useState, useEffect } from 'react'
import confetti         from 'canvas-confetti'
import { useRouter }    from 'next/router'
import Link             from 'next/link'

export default function ChallengePage({ dayNo, material, watched, notes }) {
  const router = useRouter()
  const [done, setDone]     = useState(watched)
  const [myNote, setMyNote] = useState(notes || '')

  // –ø—Ä–∏ —Å–º–µ–Ω–µ –¥–Ω—è —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –∑–∞–º–µ—Ç–∫—É –≤ state
  useEffect(() => {
    setDone(watched)
    setMyNote(notes || '')
  }, [watched, notes, dayNo])

  // –∫–æ–Ω—Ñ–µ—Ç—Ç–∏ –Ω–∞ —Ñ–∏–Ω–∞–ª—å–Ω–æ–º –¥–Ω–µ –ø–æ—Å–ª–µ –æ—Ç–º–µ—Ç–∫–∏
  useEffect(() => {
    if (dayNo === 14 && done) {
      confetti({ particleCount: 200, spread: 80 })
    }
  }, [done, dayNo])

  // –æ—Ç–º–µ—á–∞–µ–º –¥–µ–Ω—å –∫–∞–∫ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã–π
  async function markRead() {
    const res = await fetch('/api/challenge/start', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ dayNo, notes: myNote })
    })
    const json = await res.json()
    if (json.ok) setDone(true)
    else alert('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ç–º–µ—Ç–∫–∏: ' + (json.error || 'unknown'))
  }

  return (
    <>
      <Head>
        <title>–î–µ–Ω—å {dayNo} –∏–∑ 14 ‚Ä¢ –¢–µ—Ä—Ä–∞ Zetetica</title>
      </Head>
      <main style={{ maxWidth: 720, margin: '2rem auto', padding: '0 1rem' }}>
        <h1>–î–µ–Ω—å {dayNo} / 14</h1>

        <DayMaterial material={material} />

        {/* –ö–Ω–æ–ø–∫–∞ –æ—Ç–º–µ—Ç–∫–∏ –ø—Ä–æ—á–∏—Ç–∞–Ω–Ω–æ–≥–æ */}
        {!done ? (
          <button
            onClick={markRead}
            style={{
              background: '#28a745',
              color: '#fff',
              border: 'none',
              padding: '0.75rem 1.5rem',
              borderRadius: 6,
              fontSize: 16,
              cursor: 'pointer',
            }}
          >
            ‚úîÔ∏è –Ø –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ –∏–∑—É—á–∏–ª –º–∞—Ç–µ—Ä–∏–∞–ª —ç—Ç–æ–≥–æ –¥–Ω—è
          </button>
        ) : (
          <p style={{ color: '#28a745', fontWeight: 'bold' }}>
            ‚úîÔ∏è –ú–∞—Ç–µ—Ä–∏–∞–ª –æ—Ç–º–µ—á–µ–Ω
          </p>
        )}

        {/* –§–æ—Ä–º–∞ –∑–∞–º–µ—Ç–æ–∫ */}
        {done && (
          <div style={{ marginTop: 24 }}>
            <textarea
              value={myNote}
              onChange={e => setMyNote(e.target.value)}
              placeholder="–í–∞—à–∏ –∑–∞–º–µ—Ç–∫–∏‚Ä¶"
              rows={5}
              style={{
                width: '100%',
                padding: 8,
                borderRadius: 4,
                border: '1px solid #ccc',
                fontSize: 14,
              }}
            />
            <button
              onClick={markRead}
              style={{
                marginTop: 8,
                background: '#007bff',
                color: '#fff',
                border: 'none',
                padding: '0.5rem 1rem',
                borderRadius: 4,
                cursor: 'pointer',
              }}
            >
              üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∑–∞–º–µ—Ç–∫—É
            </button>
          </div>
        )}

        {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è: –Ω–∞–∑–∞–¥ –∏ —Å–ª–µ–¥—É—é—â–∏–π –¥–µ–Ω—å */}
        <div style={{ marginTop: 32, display: 'flex', gap: 12 }}>
          <button onClick={() => router.back()} style={{ cursor: 'pointer' }}>
            ‚Üê –ù–∞–∑–∞–¥
          </button>
          {dayNo < 14 && (
            <Link href={`/challenge?day=${dayNo + 1}`}>
              <a>‚û°Ô∏è –ü–µ—Ä–µ–π—Ç–∏ –∫ –¥–Ω—é {dayNo + 1}</a>
            </Link>
          )}
          {dayNo === 14 && (
            <Link href="/lk?tab=progress">
              <a>üìà –ú–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å</a>
            </Link>
          )}
        </div>
      </main>
    </>
  )
}

export async function getServerSideProps({ req, query }) {
  // –¥–æ—Å—Ç–∞—ë–º cid –∏–∑ –∫—É–∫–∏
  const { cid } = parse(req.headers.cookie || '')
  if (!cid) {
    // –µ—Å–ª–∏ –Ω–µ—Ç cid ‚Äî –≤ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç (–≥–¥–µ –±—É–¥–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è)
    return { redirect: { destination: '/lk', permanent: false } }
  }

  const day = Number(query.day) || 1

  // –±–µ—Ä—ë–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞ (HTML)
  const { data: mat } = await supabase
    .from('daily_materials')
    .select('content_html')
    .eq('day_no', day)
    .single()

  // –ø—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Ç–º–µ—á–µ–Ω –ª–∏ —ç—Ç–æ—Ç –¥–µ–Ω—å —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const { data: prog } = await supabase
    .from('daily_progress')
    .select('id, notes')
    .eq('citizen_id', cid)
    .eq('day_no', day)
    .maybeSingle()

  return {
    props: {
      dayNo:   day,
      material: mat || { content_html: '<p>–ú–∞—Ç–µ—Ä–∏–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω.</p>' },
      watched:  Boolean(prog),
      notes:    prog?.notes || '',
    }
  }
}
