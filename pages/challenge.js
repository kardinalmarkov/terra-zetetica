// –°—Ç—Ä–∞–Ω–∏—Ü–∞ ¬´–î–µ–Ω—å N¬ª
import { useState, useEffect } from 'react'
import { useRouter }           from 'next/router'
import Head                    from 'next/head'
import confetti                from 'canvas-confetti'
import DayMaterial             from '../components/DayMaterial'
import useMe                   from '../utils/useMe'

// ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ —Å–µ—Ä–≤–µ—Ä ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
export async function getServerSideProps ({ query, req }) {
  const dayNo = Math.min(Math.max(+query.day || 1, 1), 14)
  const { tg, cid } = (await import('cookie')).parse(req.headers.cookie ?? '')
  if (!tg || !cid) return { redirect:{ destination:'/lk', permanent:false } }

  const { supabase } = await import('../lib/supabase')

  /* –º–∞—Ç–µ—Ä–∏–∞–ª –¥–Ω—è + –∑–∞–º–µ—Ç–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–µ—Å–ª–∏ –±—ã–ª–∞) */
  const [matRsp, noteRsp] = await Promise.all([
    supabase.from('daily_materials')
            .select('*').eq('day_no', dayNo).single(),
    supabase.from('daily_progress')
            .select('notes').match({ citizen_id:cid, day_no:dayNo }).maybeSingle()
  ])
  const material = { ...matRsp.data, note: noteRsp.data?.notes || '' }

  /* –µ—Å–ª–∏ –¥–µ–Ω—å –µ—â—ë –∑–∞–∫—Ä—ã—Ç ‚Äì –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –ü—Ä–æ–≥—Ä–µ—Å—Å */
  if (material.unlock_at && new Date(material.unlock_at) > Date.now()) {
    return { redirect:{ destination:'/lk?tab=progress', permanent:false } }
  }
  return { props:{ dayNo, material } }
}

// ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –∫–ª–∏–µ–Ω—Ç ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
export default function ChallengePage({ dayNo, material }) {
  const router              = useRouter()
  const { data }            = useMe()                     // { citizen }
  const [watched, setWatch] = useState(Boolean(material.note))
  const [note, setNote]     = useState(material.note)
  const [timeLeft, setLeft] = useState(null)              // –º—Å –¥–æ –æ—Ç–∫—Ä—ã—Ç–∏—è N+1

  /* –æ–±—Ä–∞—Ç–Ω—ã–π —Å—á—ë—Ç */
  useEffect(() => {
    if (dayNo === 14 || !material.unlock_at) return
    const id = setInterval(() => {
      setLeft(Math.max(0, new Date(material.unlock_at) - Date.now()))
    }, 1000)
    return () => clearInterval(id)
  }, [dayNo, material.unlock_at])

  /* —Å–∞–ª—é—Ç –Ω–∞ 14-–º –¥–Ω–µ */
  useEffect(() => {
    if (dayNo === 14 && watched) confetti({ particleCount:200, spread:80 })
  }, [dayNo, watched])

  /* –æ—Ç–º–µ—Ç–∫–∞ ¬´–∏–∑—É—á–∏–ª¬ª + —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∏ */
  async function handleDone () {
    const res = await fetch('/api/challenge/mark', {
      method :'POST',
      headers:{ 'Content-Type':'application/json' },
      body   : JSON.stringify({ day: dayNo, note })
    }).then(r => r.json())
    if (res.ok) setWatch(true)
    else alert('–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: ' + (res.error || 'unknown'))
  }

  /* –ø–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –¥–Ω—é */
  function gotoNext () { router.push(`/challenge?day=${dayNo+1}`) }

  // ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ UI ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
  return (
    <main style={{margin:'0 auto',maxWidth:900,padding:'1rem'}}>
      <Head><title>–î–µ–Ω—å {dayNo} ‚Ä¢ Terra Zetetica</title></Head>

      <DayMaterial material={material}/>

      {/* –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä */}
      <ul className="dots">
        {Array.from({length:14}).map((_,i)=>(
          <li key={i}
              className={i < dayNo-1             ? 'done'
                        : i === dayNo-1 && watched ? 'done'
                        : 'todo'}
          />
        ))}
      </ul>

      {/* —Ç–∞–π–º–µ—Ä –¥–æ N+1 */}
      {timeLeft!==null && !watched && (
        <p style={{color:'#888',margin:'6px 0 22px'}}>
          üîí –°–ª–µ–¥—É—é—â–∏–π –¥–µ–Ω—å –æ—Ç–∫—Ä–æ–µ—Ç—Å—è —á–µ—Ä–µ–∑&nbsp;
          {Math.floor(timeLeft/3600000)} —á&nbsp;
          {Math.floor(timeLeft/60000)%60} –º–∏–Ω
        </p>
      )}

      {/* –∑–∞–º–µ—Ç–∫–∏ ‚Äì –≤—Å–µ–≥–¥–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª–µ, –¥–∞–∂–µ –ø–æ—Å–ª–µ –æ—Ç–º–µ—Ç–∫–∏ */}
      <h3 style={{marginTop:32}}>üíæ –ó–∞–º–µ—Ç–∫–∞</h3>
      <textarea
        rows={4}
        maxLength={1000}
        style={{width:'100%',marginBottom:12}}
        value={note}
        onChange={e=>setNote(e.target.value)}
      />

      {!watched && (
        <button className="btn primary" onClick={handleDone}>
          ‚úîÔ∏è –Ø –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ –∏–∑—É—á–∏–ª –º–∞—Ç–µ—Ä–∏–∞–ª
        </button>
      )}

      {/* –Ω–∞–≤–∏–≥–∞—Ü–∏—è */}
      <p style={{marginTop:28}}>
        <button className="btn-link" onClick={()=>router.push('/lk?tab=progress')}>
          ‚Üê –∫ –ü—Ä–æ–≥—Ä–µ—Å—Å—É
        </button>
        {dayNo<14 && watched && timeLeft===0 && (
          <> | <button className="btn-link" onClick={gotoNext}>‚Üí –¥–µ–Ω—å {dayNo+1}</button></>
        )}
      </p>

      <style jsx>{`
        .dots{display:flex;gap:6px;list-style:none;padding:0;margin:24px 0}
        .dots li{width:12px;height:12px;border-radius:50%;background:#ccc}
        .dots li.done{background:#28a745}
      `}</style>
    </main>
  )
}
