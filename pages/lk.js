// pages/lk.js
import Head from 'next/head'
import { useEffect, useState } from 'react'
import { useRouter } from 'next/router'
import { parse } from 'cookie'
import { supabase } from '../lib/supabase'

export default function Lk({ user }) {
  const router = useRouter()
  const [citizen, setCitizen] = useState(null)

  useEffect(() => {
    if (!user) return router.replace('/')
    supabase
      .from('citizens')
      .select('*')
      .eq('telegram_id', user.id)
      .single()
      .then(({ data }) => setCitizen(data))
  }, [user])

  const logout = async () => {
    await fetch('/api/logout')
    router.replace('/')
  }

  if (!user || !citizen) {
    return <main className="wrapper"><p>–ó–∞–≥—Ä—É–∑–∫–∞...</p></main>
  }

  return (
    <>
      <Head><title>–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç | TZ</title></Head>
      <main className="wrapper">
        <button onClick={logout}>–í—ã–π—Ç–∏</button>
        <h1>üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</h1>
        <p>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {user.first_name} {user.last_name}! üá∑üá∫ –†–∞–¥—ã –≤–∞—Å –≤–∏–¥–µ—Ç—å.</p>

        <section><h2>üôè –ü—Ä–æ—Ñ–∏–ª—å</h2>
          <img src={user.photo_url} width="120" style={{borderRadius:8}} />
          <p>ID: {user.id}</p>
          <p>–¢–µ–ª–µ–≥—Ä–∞–º –∏–º—è: @{user.username || '‚Äî'}</p>
          <p>–í–∞—à—É –∑–∞–ø–∏—Å—å {citizen ? '–Ω–∞–π–¥–µ–Ω–æ –≤ –ë–î ‚úîÔ∏è' : '–Ω–µ –Ω–∞–π–¥–µ–Ω–æ ‚ùó'}</p>
          <p>
            –°—Ç–∞—Ç—É—Å: {citizen.challenge_status === 'valid'
              ? '‚úÖ –ì—Ä–∞–∂–¥–∞–Ω–∏–Ω Terra Zetetica'
              : '‚ùì –ù–µ –≥—Ä–∞–∂–¥–∞–Ω–∏–Ω'}
          </p>
        </section>

        <section><h2>üìú –ü–∞—Å–ø–æ—Ä—Ç / üè† –ß–µ–ª–ª–µ–Ω–¥–∂</h2>
          <p>Z-ID: {citizen.zetetic_id || '‚Äî'}</p>
          <p>IPFS: {citizen.ipfs_url
            ? <a href={citizen.ipfs_url} target="_blank">—Å—Å—ã–ª–∫–∞</a>
            : '‚Äî'}</p>
          <p>–°—Ç–∞—Ç—É—Å —á–µ–ª–ª–µ–Ω–¥–∂–∞: {citizen.challenge_status}</p>
        </section>

        <section><h2>üìà –ú–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å</h2>
          <p>–ó–¥–µ—Å—å –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å</p>
        </section>
      </main>
    </>
  )
}

export async function getServerSideProps({ req }) {
  const cookies = parse(req.headers.cookie || '')
  const tg = cookies.tg ? JSON.parse(Buffer.from(cookies.tg,'base64').toString()) : null
  return { props: { user: tg } }
}
