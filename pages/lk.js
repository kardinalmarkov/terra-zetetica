// pages/lk.js
//
// v3.1 ‚Ä¢ 19 Jun 2025
//
// ‚ñ∏ –¢—Ä–∏ –≤–∫–ª–∞–¥–∫–∏: profile / passport / progress
// ‚ñ∏ profile   ‚Äì –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¢–µ–ª–µ–≥—Ä–∞–º-–¥–∞–Ω–Ω—ã–µ + –¥–∞—Ç—ã –Ω–∞—á–∞–ª–∞/–∫–æ–Ω—Ü–∞ —á–µ–ª–ª–µ–Ω–¥–∂–∞
// ‚ñ∏ passport  ‚Äì –∫–Ω–æ–ø–∫–∞ ¬´–Ω–∞—á–∞—Ç—å¬ª, –ª–∏–±–æ —Å—Ç–∞—Ç—É—Å ¬´‚è≥ / üéâ¬ª (–∞–∫—Ç–∏–≤–µ–Ω / –ø—Ä–æ–π–¥–µ–Ω)
// ‚ñ∏ progress  ‚Äì –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä 14-–¥–Ω–µ–≤–∫–∏ + —Ñ–æ—Ä–º–∞ ¬´–î–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ —à–∞—Ä–∞¬ª –ø–æ—Å–ª–µ 14/14
// ‚ñ∏ ‚Äú‚Ü© –ö —Ç–µ–∫—É—â–µ–º—É –¥–Ω—é‚Äù –≤–µ–¥—ë—Ç —Ç—É–¥–∞, –≥–¥–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è
// ‚ñ∏ –ó–∞–º–µ—Ç–∫–∏ –ø–æ–¥–≥—Ä—É–∂–∞—é—Ç—Å—è ¬´–ª–µ–Ω–∏–≤–æ¬ª —á–µ—Ä–µ–∑ Supabase-SDK (–Ω–µ –ª–æ–º–∞–µ–º –∫–µ—à Next.js)
// ‚ñ∏ –ù–∞ —Å–µ—Ä–≤–µ—Ä–µ –æ—Ç–¥–∞—ë–º –ª—ë–≥–∫–∏–π JSON —Å –∑–∞–º–µ—Ç–∫–∞–º–∏, —á—Ç–æ–±—ã –Ω–µ —Ç–∞—â–∏—Ç—å –ª–∏—à–Ω–∏–µ –ø–æ–ª—è
//

import Head                 from 'next/head'
import Link                 from 'next/link'
import { parse }            from 'cookie'
import { useRouter }        from 'next/router'
import { useState, useEffect } from 'react'
import { supabase }         from '../lib/supabase'

/* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ  COMPONENT  ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */

export default function LK ({ user, citizen, progress, notesJSON }) {
  /* ‚Äî –ª–æ–∫–∞–ª—å–Ω—ã–π —Å—Ç–µ–π—Ç –≤–∫–ª–∞–¥–∫–∏ –∏ –∑–∞–º–µ—Ç–æ–∫ ‚Äî */
  const router            = useRouter()
  const [tab,   setTab]   = useState(router.query.tab || 'profile')
  const [notes, setNotes] = useState(JSON.parse(notesJSON || '{}'))

  /* –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º –≤–∫–ª–∞–¥–∫–∏ ¬´–º—è–≥–∫–æ¬ª, –±–µ–∑ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã */
  const switchTab = key => {
    setTab(key)
    router.push(`/lk?tab=${key}`, undefined, { shallow: true })
  }

  const logout = () =>
    fetch('/api/logout', { method: 'POST' }).then(() => router.replace('/'))

  /* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ  GUARD: –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω  ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
  if (!user) {
    return (
      <main style={{ padding:'2rem', maxWidth:600, margin:'0 auto' }}>
        <h2>–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è</h2>
        <p>–í–æ–π–¥–∏—Ç–µ —á–µ—Ä–µ–∑ Telegram:</p>
        <div dangerouslySetInnerHTML={{ __html: `
<script async src="https://telegram.org/js/telegram-widget.js?15"
 data-telegram-login="ZeteticID_bot" data-size="large" data-userpic="true"
 data-lang="ru" data-request-access="write" data-auth-url="/api/auth"></script>` }} />
      </main>
    )
  }

  /* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ  LAZY-FETCH –∑–∞–º–µ—Ç–æ–∫ –ø—Ä–∏ –∫–∞–∂–¥–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏  ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
  useEffect(() => {
    if (!citizen?.id) return                       // safety-check
    supabase
      .from('daily_progress')
      .select('day_no,notes')
      .eq('citizen_id', citizen.id)
      .then(({ data }) => {
        const map = { ...notes }
        data?.forEach(r => { if (r.notes) map[r.day_no] = r.notes })
        setNotes(map)                             // –æ–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –∏–∑–º–µ–Ω—ë–Ω–Ω–æ–µ
      })
  // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [router.asPath])                             // —Ç—Ä–∏–≥–≥–µ—Ä –ø—Ä–∏ —Å–º–µ–Ω–µ URL

  /* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ  RENDER  ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
  return (
    <>
      <Head><title>–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç ‚Ä¢ Terra Zetetica</title></Head>

      <main style={{ maxWidth:920, margin:'2rem auto', padding:'0 1rem' }}>

        {/* ====== Header ====== */}
        <header style={{
          display:'flex', justifyContent:'space-between', marginBottom:20
        }}>
          <strong>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {user.first_name}!</strong>
          <button className="btn-secondary" onClick={logout}>–í—ã–π—Ç–∏</button>
        </header>

        {/* ====== Tabs ====== */}
        <nav style={{ display:'flex', gap:12, marginBottom:18 }}>
          {[
            ['profile' , 'üôè –ü—Ä–æ—Ñ–∏–ª—å'],
            ['passport', 'üìú –ü–∞—Å–ø–æ—Ä—Ç / üè† –ß–µ–ª–ª–µ–Ω–¥–∂'],
            ['progress', 'üìà –ü—Ä–æ–≥—Ä–µ—Å—Å']
          ].map(([k,label]) => (
            <button key={k} onClick={() => switchTab(k)}
              style={{
                padding:'0.5rem 0.9rem',
                borderRadius:6,
                border     : tab===k ? '2px solid #6c63ff' : '1px solid #ccc',
                background : tab===k ? '#f0f0ff'           : '#fff'
              }}>{label}</button>
          ))}
        </nav>

        {/* ========== 1. PROFILE ========== */}
        {tab==='profile' && (
          <>
            <img src={user.photo_url} width={120} height={120}
                 style={{ borderRadius:8 }}/>
            <p>ID Telegram: <b>{user.id}</b></p>
            {!!user.username && <p>Username: <b>@{user.username}</b></p>}

            {!!citizen && (
              <>
                <p><b>–°—Ç–∞—Ç—É—Å:</b>{' '}
                  {citizen.status==='valid' ? '‚úÖ –ì—Ä–∞–∂–¥–∞–Ω–∏–Ω'
                   : citizen.status==='guest' ? 'üë§ –ì–æ—Å—Ç—å'
                   : '‚ùì'}
                </p>

                {/* –¥–∞—Ç—ã —Å—Ç–∞—Ä—Ç–∞ / —Ñ–∏–Ω–∏—à–∞ —á–µ–ª–ª–µ–Ω–¥–∂–∞ */}
                {citizen.challenge_started_at &&
                  <p>–ß–µ–ª–ª–µ–Ω–¥–∂ –Ω–∞—á–∞—Ç:&nbsp;
                    {new Date(citizen.challenge_started_at)
                     .toLocaleString('ru-RU')}
                  </p>}
                {citizen.challenge_finished_at &&
                  <p>–ß–µ–ª–ª–µ–Ω–¥–∂ –æ–∫–æ–Ω—á–µ–Ω:&nbsp;
                    {new Date(citizen.challenge_finished_at)
                     .toLocaleString('ru-RU')}
                  </p>}
              </>
            )}
          </>
        )}

        {/* ========== 2. PASSPORT (–°—Ç–∞—Ä—Ç / –°—Ç–∞—Ç—É—Å) ========== */}
        {tab==='passport' && (
          <>
            {citizen ? (
              <>
                <p><strong>Z-ID:</strong> {citizen.zetetic_id||'‚Äî'}</p>

                {/* INACTIVE ‚Üí –∫–Ω–æ–ø–∫–∞ —Å—Ç–∞—Ä—Ç–∞ */}
                {citizen.challenge_status==='inactive' && (
                  <button className="btn primary"
                          onClick={() =>
                            fetch('/api/challenge/start',{method:'POST'})
                              .then(()=>router.push('/challenge?day=1'))}>
                    üöÄ –ù–∞—á–∞—Ç—å —á–µ–ª–ª–µ–Ω–¥–∂
                  </button>
                )}

                {/* ACTIVE ‚Üí –∫—Ä–∞—Ç–∫–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å */}
                {citizen.challenge_status==='active' &&
                  <p>‚è≥ –ü—Ä–æ–π–¥–µ–Ω–æ {progress}/14</p>}

                {/* FINISHED ‚Üí –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏–µ */}
                {citizen.challenge_status==='finished' &&
                  <p style={{color:'green'}}>
                    üéâ –ß–µ–ª–ª–µ–Ω–¥–∂ –ø—Ä–æ–π–¥–µ–Ω ‚Äî –∂–¥—ë–º –≤–∞—à–∏—Ö –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤!
                  </p>}
              </>
            ) : (
              /* –≥–æ—Å—Ç—å –±–µ–∑ –∑–∞–ø–∏—Å–∏ */
              <button className="btn primary"
                      onClick={() =>
                        fetch('/api/challenge/start',{method:'POST'})
                          .then(()=>router.push('/challenge?day=1'))}>
                üöÄ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ —á–µ–ª–ª–µ–Ω–¥–∂—É
              </button>
            )}
          </>
        )}

        {/* ========== 3. PROGRESS ========== */}
        {tab==='progress' && (
          <>
            <h2 style={{margin:'1rem 0'}}>
              {/* –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–ª–∏–∫–∞–±–µ–ª—å–Ω–æ, –≤–µ–¥—ë—Ç –Ω–∞ /dom */}
              <Link href="/dom">üè† –ß–µ–ª–ª–µ–Ω–¥–∂ ¬´–î–æ–∫–∞–∂–∏ —à–∞—Ä¬ª</Link>
            </h2>

            {/* –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä */}
            <p>–î–Ω–µ–π –ø—Ä–æ–π–¥–µ–Ω–æ: <b>{progress}</b> / 14</p>
            <div style={{background:'#eee',height:12,borderRadius:6,maxWidth:400}}>
              <div style={{
                width:`${progress/14*100}%`,
                height:'100%',background:'#6c63ff',borderRadius:6
              }}/>
            </div>

            {/* –±—ã—Å—Ç—Ä—ã–π –ø–µ—Ä–µ—Ö–æ–¥ –∫ ¬´—Ä–∞–±–æ—á–µ–º—É¬ª –¥–Ω—é */}
            <button className="btn-link" style={{marginTop:12}}
                    onClick={() =>
                      router.push(`/challenge?day=${Math.max(progress,1)}`)}>
              ‚Ü© –ö —Ç–µ–∫—É—â–µ–º—É –¥–Ω—é
            </button>

            {/* —Ñ–æ—Ä–º–∞ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ + ¬´–¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ —à–∞—Ä–∞¬ª  */}
            {progress===14 && (
              <form onSubmit={async e=>{
                       e.preventDefault()
                       const txt = e.target.fb.value.trim()
                       if(!txt) return
                       const ok = await fetch('/api/feedback',{
                         method :'POST',
                         headers:{'Content-Type':'application/json'},
                         body   : JSON.stringify({ text:txt })
                       }).then(r=>r.json())
                       if(ok) { alert('–°–ø–∞—Å–∏–±–æ!'); e.target.reset() }
                     }}
                    style={{marginTop:32,maxWidth:500}}>
                <h4>üí¨ –î–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ —à–∞—Ä–∞ / –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å</h4>
                <textarea name="fb" rows={4} maxLength={1000}
                          style={{width:'100%',marginBottom:8}}/>
                <button className="btn primary">–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>
              </form>
            )}

            {/* —Å–ø–∏—Å–æ–∫ –∑–∞–º–µ—Ç–æ–∫ –∑–∞ –ø—Ä–æ–π–¥–µ–Ω–Ω—ã–µ –¥–Ω–∏ */}
            {progress>0 && (
              <>
                <h4 style={{marginTop:24}}>–ó–∞–º–µ—Ç–∫–∏ –ø–æ –¥–Ω—è–º</h4>
                <ul className="notes-list">
                  {Array.from({length:progress}).map((_,i)=>(
                    <li key={i}>
                      <button className="btn-link"
                              onClick={()=>router.push(`/challenge?day=${i+1}`)}>
                        –î–µ–Ω—å {i+1}
                      </button>{' '}
                      <i>{notes[i+1] || '‚Äî –Ω–µ—Ç ‚Äî'}</i>
                    </li>
                  ))}
                </ul>
              </>
            )}
          </>
        )}
      </main>
    </>
  )
}

/* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ  SERVER-SIDE  (SSR)  ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
export async function getServerSideProps({ req }) {
  /* 1. —á–∏—Ç–∞–µ–º cookie (tg = Telegram-payload, cid = id –≤ citizens) */
  const { tg, cid } = parse(req.headers.cookie || '')
  const user = tg ? JSON.parse(Buffer.from(tg,'base64').toString()) : null

  /* –≥–æ—Å—Ç—é –æ—Ç–¥–∞—ë–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –Ω–∞–±–æ—Ä –ø—Ä–æ–ø—Å–æ–≤ */
  if (!cid)
    return { props:{ user, citizen:null, progress:0, notesJSON:'{}' } }

  /* 2. –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ —Ç—è–Ω–µ–º –∑–∞–ø–∏—Å—å citizen + –≤—Å–µ –∑–∞–º–µ—Ç–∫–∏ */
  const [
    { data: citizen },
    { data: rows }
  ] = await Promise.all([
    supabase.from('citizens')
            .select('*')
            .eq('id',cid)
            .maybeSingle(),
    supabase.from('daily_progress')
            .select('day_no,notes')
            .eq('citizen_id',cid)
  ])

  /* 3. –ø—Ä–µ–≤—Ä–∞—â–∞–µ–º —Å–ø–∏—Å–æ–∫ rows ‚Üí –æ–±—ä–µ–∫—Ç notes { 1:'...', ‚Ä¶ } */
  const notes = {}
  ;(rows || []).forEach(r => { if (r.notes) notes[r.day_no] = r.notes })

  /* 4. –≤–æ–∑–≤—Ä–∞—â–∞–µ–º SSR-–ø—Ä–æ–ø—Å—ã */
  return {
    props:{
      user,
      citizen : citizen || null,
      progress: (rows || []).length,
      notesJSON: JSON.stringify(notes)
    }
  }
}
