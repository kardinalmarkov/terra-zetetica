// pages/lk.js            v 2.9   ‚Äî 15 Jun 2025
import Head          from 'next/head'
import Link          from 'next/link'
import { parse }     from 'cookie'
import { useRouter } from 'next/router'
import { useState, useEffect } from 'react'
import { supabase }  from '../lib/supabase'

export default function LK ({ user, citizen, progress, notesJSON }) {
  const router            = useRouter()
  const [tab, setTab]     = useState(router.query.tab || 'profile')
  const [notesMap,setMap] = useState(JSON.parse(notesJSON||'{}'))

  /* ‚Äî‚Äî‚Äî –ø–µ—Ä–µ—Ö–æ–¥ –º–µ–∂–¥—É –≤–∫–ª–∞–¥–∫–∞–º–∏ ‚Äî‚Äî‚Äî */
  const switchTab = key=>{
    setTab(key)
    router.push(`/lk?tab=${key}`,undefined,{shallow:true})
  }

  /* ‚Äî‚Äî‚Äî –≤—ã—Ö–æ–¥ ‚Äî‚Äî‚Äî */
  const logout = ()=>fetch('/api/logout',{method:'POST'}).then(()=>router.replace('/'))

  /* ‚Äî‚Äî‚Äî –Ω–µ—Ç Telegram-–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ ‚Äî‚Äî‚Äî */
  if (!user) return (
    <main style={{padding:'2rem',maxWidth:600,margin:'0 auto'}}>
      <h2>–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è</h2>
      <p>–í–æ–π–¥–∏—Ç–µ —á–µ—Ä–µ–∑ Telegram:</p>
      <div dangerouslySetInnerHTML={{__html:`
<script async src="https://telegram.org/js/telegram-widget.js?15"
 data-telegram-login="ZeteticID_bot" data-size="large" data-userpic="true"
 data-lang="ru" data-request-access="write" data-auth-url="/api/auth"></script>`}}/>
    </main>
  )

  /* ‚Äî‚Äî‚Äî –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è –ø–æ–¥–≥—Ä—É–∑–∫–∞ –∑–∞–º–µ—Ç–æ–∫ (–ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –¥—Ä—É–≥–æ–π –≤–∫–ª–∞–¥–∫–∏ –±—Ä–∞—É–∑–µ—Ä–æ–º) ‚Äî‚Äî‚Äî */
  useEffect(()=>{
    if (!citizen?.id) return
    supabase                                     // ‚ö° –ø–æ–≤—Ç–æ—Ä—è–µ–º —Ç–æ–ª—å–∫–æ –ø—Ä–∏ refocus/vis-change
      .from('daily_progress')                    //    —á—Ç–æ–±—ã –Ω–µ –¥–µ—Ä–∂–∞—Ç—å –≤–µ–±-—Å–æ–∫–µ—Ç –ø–æ—Å—Ç–æ—è–Ω–Ω–æ
      .select('day_no,notes')
      .eq('citizen_id',citizen.id)
      .then(({data})=>{
        const m={...notesMap}
        data?.forEach(r=>{ if(r.notes) m[r.day_no]=r.notes })
        setMap(m)
      })
    // eslint-disable-next-line react-hooks/exhaustive-deps
  },[router.asPath])                              // ‚ö° –∞ –Ω–µ [citizen] -> –∏–∑–±–∞–≤–∏–ª–∏—Å—å –æ—Ç –ª–∏—à–Ω–∏—Ö –≤—ã–∑–æ–≤–æ–≤

  /* ‚Äî‚Äî‚Äî UI ‚Äî‚Äî‚Äî */
  return (
    <>
      <Head><title>–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç ‚Ä¢ Terra Zetetica</title></Head>

      <main style={{maxWidth:860,margin:'2rem auto',padding:'0 1rem'}}>
        {/* —à–∞–ø–∫–∞ */}
        <header style={{display:'flex',justifyContent:'space-between',marginBottom:20}}>
          <strong>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {user.first_name}!</strong>
          <button onClick={logout} className="btn-secondary">–í—ã–π—Ç–∏</button>
        </header>

        {/* –≤–∫–ª–∞–¥–∫–∏ */}
        <nav style={{display:'flex',gap:12,marginBottom:18}}>
          {[
            ['profile' ,'üôè –ü—Ä–æ—Ñ–∏–ª—å'],
            ['passport','üìú –ü–∞—Å–ø–æ—Ä—Ç / üè† –ß–µ–ª–ª–µ–Ω–¥–∂'],
            ['progress','üìà –ü—Ä–æ–≥—Ä–µ—Å—Å']
          ].map(([k,l])=>(
            <button key={k} onClick={()=>switchTab(k)}
              style={{
                padding:'0.5rem 0.9rem',
                borderRadius:6,
                border: tab===k?'2px solid #6c63ff':'1px solid #ccc',
                background: tab===k?'#f0f0ff':'#fff'
              }}>{l}</button>
          ))}
        </nav>

        {/* ‚Äî‚Äî‚Äî 1. –ü–†–û–§–ò–õ–¨ ‚Äî‚Äî‚Äî */}
        {tab==='profile' && (
          <>
            <img src={user.photo_url} width={120} height={120} style={{borderRadius:8}}/>
            <p>ID Telegram: <b>{user.id}</b></p>
            {!!user.username && <p>Username: <b>@{user.username}</b></p>}
            <p><b>–ó–∞–ø–∏—Å—å –≤ –ë–î:</b> {citizen ? '‚úîÔ∏è' : '‚ùå'}</p>
            {citizen && (
              <p><b>–°—Ç–∞—Ç—É—Å:</b> {citizen.status==='valid'
                  ? '‚úÖ –ì—Ä–∞–∂–¥–∞–Ω–∏–Ω'
                  : citizen.status==='guest' ? 'üë§ –ì–æ—Å—Ç—å' : '‚ùì'}</p>
            )}
          </>
        )}

        {/* ‚Äî‚Äî‚Äî 2. –ü–ê–°–ü–û–†–¢/–ß–ï–õ–õ–ï–ù–î–ñ ‚Äî‚Äî‚Äî */}
        {tab==='passport' && (
          <>
            {citizen ? (
              <>
                <p><strong>Z-ID:</strong> {citizen.zetetic_id||'‚Äî'}</p>

                {citizen.challenge_status==='inactive' && (
                  <button className="btn primary"
                          onClick={()=>fetch('/api/challenge/start',{method:'POST'})
                                       .then(()=>router.push('/challenge?day=1'))}>
                    üöÄ –ù–∞—á–∞—Ç—å —á–µ–ª–ª–µ–Ω–¥–∂
                  </button>
                )}

                {citizen.challenge_status==='active'   && <p>‚è≥ –ü—Ä–æ–π–¥–µ–Ω–æ {progress}/14</p>}
                {citizen.challenge_status==='finished' && <p style={{color:'green'}}>üéâ –ß–µ–ª–ª–µ–Ω–¥–∂ –ø—Ä–æ–π–¥–µ–Ω!</p>}
              </>
            ):(
              <button className="btn primary"
                      onClick={()=>fetch('/api/challenge/start',{method:'POST'})
                                   .then(()=>router.push('/challenge?day=1'))}>
                üöÄ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ —á–µ–ª–ª–µ–Ω–¥–∂—É
              </button>
            )}
          </>
        )}

        {/* ‚Äî‚Äî‚Äî 3. –ü–†–û–ì–†–ï–°–° ‚Äî‚Äî‚Äî */}
        {tab==='progress' && (
          <>
            <h2 style={{margin:'1rem 0'}}>üè† –ß–µ–ª–ª–µ–Ω–¥–∂ ¬´–î–æ–∫–∞–∂–∏ —à–∞—Ä¬ª</h2>
            <p>–î–Ω–µ–π –ø—Ä–æ–π–¥–µ–Ω–æ: <b>{progress}</b> / 14</p>
            <div style={{background:'#eee',height:12,borderRadius:6,maxWidth:400}}>
              <div style={{
                width:`${progress/14*100}%`,
                height:'100%',background:'#6c63ff',borderRadius:6
              }}/>
            </div>

            <button className="btn-link" style={{marginTop:12}}
                    onClick={()=>router.push(`/challenge?day=${Math.max(progress,1)}`)}>
              ‚Ü©Ô∏è –ö —Ç–µ–∫—É—â–µ–º—É –¥–Ω—é
            </button>

            {progress>0 && (
              <>
                <h4 style={{marginTop:24}}>–ó–∞–º–µ—Ç–∫–∏ –ø–æ –¥–Ω—è–º</h4>
                <ul className="notes-list">
                  {Array.from({length:progress}).map((_,i)=>(
                    <li key={i}>
                      <button className="btn-link"
                              onClick={()=>router.push(`/challenge?day=${i+1}`)}>
                        –î–µ–Ω—å {i+1}
                      </button>{' '}
                      <i>{notesMap[i+1]||'‚Äî –Ω–µ—Ç ‚Äî'}</i>
                    </li>
                  ))}
                </ul>
              </>
            )}
          </>
        )}
      </main>
    </>
  )
}

/* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ SSR ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
export async function getServerSideProps({ req }){
  const { tg, cid } = parse(req.headers.cookie||'')
  const user = tg ? JSON.parse(Buffer.from(tg,'base64').toString()) : null

  /* –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ Telegram-–ª–æ–≥–∏–Ω */
  if (!cid) return { props:{ user, citizen:null, progress:0, notesJSON:'{}' } }

  /* —á–∏—Ç–∞–µ–º –≥—Ä–∞–∂–¥–∞–Ω–∏–Ω–∞ –∏ –ø—Ä–æ–≥—Ä–µ—Å—Å */
  const [{ data: citizen, error:ce }, { data: prgs, error:pe }] = await Promise.all([
    supabase.from('citizens').select('*').eq('id',cid).maybeSingle(),
    supabase.from('daily_progress').select('day_no,notes').eq('citizen_id',cid)
  ])

  if (ce || pe){
    console.error('LK-SSR:',ce||pe)                  // ‚ö° –ª–æ–≥–∏—Ä—É–µ–º –¥–ª—è Vercel-logs
    return { props:{ user, citizen:null, progress:0, notesJSON:'{}' } }
  }

  const rows = Array.isArray(prgs) ? prgs : []
  const notes={}
  rows.forEach(r=>{ if(r.notes) notes[r.day_no]=r.notes })

  return {
    props:{
      user,
      citizen: citizen||null,
      progress: rows.length,
      notesJSON: JSON.stringify(notes)
    }
  }
}
