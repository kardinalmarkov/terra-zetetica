// pages/challenge1.js  ‚Ä¢ offline‚Äëfriendly version of the 14‚Äëday challenge page
// ---------------------------------------------------------------------------
// Goals
//  1. 100‚ÄØ% –Ω–∞–¥—ë–∂–Ω–∞—è –∫–Ω–æ–ø–∫–∞ ¬´‚úÖ –Ø –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ‚Ä¶¬ª –¥–∞–∂–µ –ø—Ä–∏ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å–µ—Ç–µ–≤—ã—Ö
//     —Å–±–æ—è—Ö, —Å—Ç–∞—Ä—ã—Ö –º–æ–±–∏–ª—å–Ω—ã—Ö –±—Ä–∞—É–∑–µ—Ä–∞—Ö, –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ Cookies –∏ –æ—Ñ—Ñ–ª–∞–π–Ω–µ.
//  2. –ú–≥–Ω–æ–≤–µ–Ω–Ω—ã–π –æ—Ç–∫–ª–∏–∫ UI (optimistic¬†UI) + —Ñ–æ–Ω–æ–≤–∞—è –ø–æ–≤—Ç–æ—Ä–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞.
//  3. –ù–∏–∫–∞–∫–∏—Ö –ª–∏—à–Ω–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ ‚Äî –æ—á–µ—Ä–µ–¥—å —Ö—Ä–∞–Ω–∏—Ç—Å—è –ª–æ–∫–∞–ª—å–Ω–æ (localStorage).
//  4. –ö–æ–¥ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø–æ–≤—Ç–æ—Ä—è–µ—Ç ¬´/challenge¬ª, —á—Ç–æ–±—ã –Ω–µ –ª–æ–º–∞—Ç—å –ª–æ–≥–∏–∫—É SSR.
// ---------------------------------------------------------------------------

import { useState, useEffect, useCallback } from 'react'
import { useRouter }           from 'next/router'
import Head                    from 'next/head'
import Link                    from 'next/link'
import DayMaterial             from '../components/DayMaterial'
import useMe                   from '../utils/useMe'

/* --------------- constants & helpers --------------- */
const LS_KEY = 'tz_pending_marks_v1'          // –æ—á–µ—Ä–µ–¥—å ¬´–Ω–µ–æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö¬ª POST‚Äë–æ–≤

const readQueue   = () => JSON.parse(localStorage.getItem(LS_KEY) || '[]')
const writeQueue  = q  => localStorage.setItem(LS_KEY, JSON.stringify(q))
const pushToQueue = rec => { const q = readQueue(); q.push(rec); writeQueue(q) }

async function flushQueue () {
  const queue = readQueue()
  if (!queue.length) return

  const rest = []
  for (const rec of queue) {
    try {
      const ok = await fetch('/api/challenge/mark', {
        method: 'POST', credentials: 'include',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(rec)
      }).then(r => r.ok)
      if (!ok) rest.push(rec)      // –Ω–µ —É–¥–∞–ª–æ—Å—å ‚Äî –æ—Å—Ç–∞—ë—Ç—Å—è –≤ –æ—á–µ—Ä–µ–¥–∏
    } catch { rest.push(rec) }
  }
  writeQueue(rest)
}

/* -------------------- SSR -------------------- */
// –í—ã—Ç–∞—Å–∫–∏–≤–∞–µ–º –≥–æ—Ç–æ–≤—É—é server‚Äëside –ª–æ–≥–∏–∫—É –∏–∑ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
export { getServerSideProps } from './challenge'

/* ------------------ Component ----------------- */
export default function Challenge1Page ({ dayNo, material, watched, unlockIn }) {

  const router     = useRouter()
  const { mutate } = useMe()

  const [note  , setNote ] = useState(material.notes)
  const [isDone, setDone ] = useState(watched)
  const [state , setState] = useState('idle')           // idle | saving | saved
  const [secLeft, setLeft ] = useState(Math.max(0, Math.floor(unlockIn)))

  /* --- flush queue once on mount + –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–µ—Ç–∏/—Ç–∞–±–æ–≤ --- */
  useEffect(() => {
    flushQueue()
    const onOnline = () => flushQueue()
    window.addEventListener('online', onOnline)
    document.addEventListener('visibilitychange', onOnline)
    return () => {
      window.removeEventListener('online', onOnline)
      document.removeEventListener('visibilitychange', onOnline)
    }
  }, [])

  /* --- —Ç–∞–π–º–µ—Ä –æ—Ç–∫—Ä—ã—Ç–∏—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –¥–Ω—è --- */
  useEffect(() => {
    if (secLeft <= 0) return
    const id = setInterval(() => setLeft(s => s - 1), 1_000)
    return () => clearInterval(id)
  }, [secLeft])

  /* --- —Å–±—Ä–æ—Å —Å—Ç–µ–π—Ç–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–∞—Ö –º–µ–∂–¥—É ?day= --- */
  useEffect(() => { setDone(watched); setNote(material.notes); setState('idle') },
            // eslint-disable-next-line react-hooks/exhaustive-deps
            [router.asPath, watched, material.notes])

  /* --- –º–∏–Ω–∏‚Äë–∫–æ–Ω—Ñ–µ—Ç—Ç–∏ –Ω–∞ 14‚Äë–º –¥–Ω–µ --- */
  useEffect(() => {
    if (isDone && dayNo === 14)
      import('canvas-confetti').then(m => m.default({ particleCount: 180, spread: 70 }))
  }, [isDone, dayNo])

  /* ----------- POST /api/challenge/mark ----------- */
  const postMark = useCallback(async ({ saveOnly }) => {
    if (state === 'saving') return
    setState('saving')

    const payload = { day: dayNo, note: note.trim(), saveOnly }

    const trySend = async () => {
      try {
        const rsp = await fetch('/api/challenge/mark', {
          method: 'POST', credentials: 'include',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify(payload)
        })
        return rsp.ok && (await rsp.json()).ok
      } catch { return false }
    }

    const ok = await trySend()

    if (!ok) {
      // ¬Ø\\_(„ÉÑ)_/¬Ø  –°–µ—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ / cookie –ø—Ä–æ–ø–∞–ª–∏ ‚Äî –∫–ª–∞–¥—ë–º –≤ –æ—Ñ—Ñ‚Äë–æ—á–µ—Ä–µ–¥—å
      pushToQueue(payload)
    }

    // optimistic UI
    if (!saveOnly) setDone(true)
    if (navigator.vibrate) navigator.vibrate(40)
    setState('saved'); setTimeout(() => setState('idle'), 1200)
    mutate()
  }, [dayNo, note, state, mutate])

  const handleSave = e => { e.preventDefault(); postMark({ saveOnly:true  }) }
  const handleDone = e => { e.preventDefault(); postMark({ saveOnly:false }) }

  /* ------------------- markup ------------------- */
  return (
    <main style={{ maxWidth: 900, margin: '0 auto', padding: '1rem' }}>
      <Head><title>–î–µ–Ω—å {dayNo} ‚Ä¢ Terra Zetetica</title></Head>

      <DayMaterial material={material} />

      {/* –ø—Ä–æ–≥—Ä–µ—Å—Å 14 —Ç–æ—á–µ–∫ */}
      <div style={{ display:'flex', gap:6, margin:'22px 0' }}>
        {Array.from({ length:14 }, (_,i) => (
          <span key={i}
                style={{
                  width:12,height:12,borderRadius:'50%',
                  background: i<dayNo-1 || (i===dayNo-1 && isDone) ? '#28a745':'#ccc'
                }}/>
        ))}
      </div>

      {/* –∑–∞–º–µ—Ç–∫–∞ + –∫–Ω–æ–ø–∫–∏ */}
      <h3 style={{ margin:'26px 0 6px' }}>üìù –í–∞—à–∞ –∑–∞–º–µ—Ç–∫–∞</h3>
      <textarea rows={4} maxLength={1000}
                style={{ width:'100%', marginBottom:10 }}
                value={note} onChange={e => setNote(e.target.value)} />

      <div style={{ display:'flex', gap:14, flexWrap:'wrap', marginBottom:26 }}>
        {/* SAVE */}
        <button type="button" className="btn primary"
                onClick={handleSave} onPointerUp={handleSave}>
          {state === 'saving' ? 'üíæ —Å–æ—Ö—Ä–∞–Ω—è—é‚Ä¶' : 'üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∑–∞–º–µ—Ç–∫—É'}
        </button>

        {/* DONE */}
        {!isDone && (
          <button type="button" className="btn primary"
                  onClick={handleDone} onPointerUp={handleDone}>
            ‚úÖ –Ø –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ –∏–∑—É—á–∏–ª
          </button>
        )}

        {isDone && <span style={{ color:'#28a745', fontWeight:600 }}>–ú–∞—Ç–µ—Ä–∏–∞–ª –ø—Ä–æ–π–¥–µ–Ω üéâ</span>}
        {state === 'saved' && <span style={{ color:'#28a745', fontWeight:600, marginLeft:6 }}>‚úî</span>}
      </div>

      {/* —Ç–∞–π–º–µ—Ä */}
      {dayNo < 14 && !isDone && secLeft > 0 && (
        <p style={{ color:'#6c63ff' }}>
          ‚è∞ –°–ª–µ–¥—É—é—â–∏–π –¥–µ–Ω—å –æ—Ç–∫—Ä–æ–µ—Ç—Å—è —á–µ—Ä–µ–∑&nbsp;
          <b>{Math.floor(secLeft/3600)} —á&nbsp;
             {Math.floor(secLeft/60)%60}&nbsp;–º–∏–Ω&nbsp;
             {secLeft%60}&nbsp;—Å</b>
        </p>
      )}

      {/* –Ω–∞–≤–∏–≥–∞—Ü–∏—è */}
      <nav style={{ marginTop:30, display:'flex', justifyContent:'space-between', fontSize:18 }}>
        <button type="button" className="btn-link" onClick={() => router.back()}>‚Üê –ù–∞–∑–∞–¥</button>
        <Link href="/lk?tab=progress" className="btn-link" scroll={false}>üìà</Link>
        {dayNo < 14 && isDone && secLeft <= 0 &&
          <Link href={`/challenge1?day=${dayNo+1}`} className="btn-link" scroll={false}>
            –¥–µ–Ω—å {dayNo+1} ‚Üí
          </Link>}
      </nav>

      {dayNo === 14 && isDone && (
        <p style={{ marginTop:30, fontSize:18, color:'green' }}>
          üéâ –í—ã –ø—Ä–æ—à–ª–∏ –≤—Å–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã! –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤&nbsp;
          <Link href="/lk?tab=progress">–ª–∏—á–Ω—ã–π&nbsp;–∫–∞–±–∏–Ω–µ—Ç</Link>, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ ¬´—à–∞—Ä–∞¬ª.
        </p>
      )}
    </main>
  )
}
