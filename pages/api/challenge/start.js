// pages/api/challenge/start.js                           v2.0 ‚Ä¢ 19 Jun 2025
//
// POST /api/challenge/start
// ‚Ä¢ —Å—Ç–∞–≤–∏—Ç challenge_started_at, –µ—Å–ª–∏ –µ—â—ë –ø—É—Å—Ç–æ
// ‚Ä¢ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç challenge_status ‚Üí 'active'
//
// ‚ö†Ô∏è   –≤—ã–∑–æ–≤ –¥–µ–ª–∞–µ—Ç—Å—è –∏–∑ –¥–≤—É—Ö –º–µ—Å—Ç:
//      ‚Ä¢ –∫–Ω–æ–ø–∫–∞ ¬´üöÄ –ù–∞—á–∞—Ç—å —á–µ–ª–ª–µ–Ω–¥–∂¬ª –≤ /lk?tab=passport
//      ‚Ä¢ –¥–ª—è ¬´–≥–æ—Å—Ç—è¬ª ‚Äì —Ç–∞ –∂–µ –∫–Ω–æ–ø–∫–∞ –ø–æ—Å–ª–µ –±—ã—Å—Ç—Ä–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
//--------------------------------------------------------------------

import { parse }    from 'cookie'
import { supabase } from '../../../lib/supabase'

export default async function handler (req, res) {
  if (req.method !== 'POST')
    return res.status(405).json({ ok:false, error:'method-not-allowed' })

  const { cid } = parse(req.headers.cookie ?? '')
  if (!cid)
    return res.status(401).json({ ok:false, error:'not-auth' })

  /*  ‚ñ∏ –û–¥–∏–Ω UPDATE ‚Äì –æ–¥–Ω–∞–∂–¥—ã:  challenge_started_at IS NULL  */
  const { error } = await supabase
    .from('citizens')
    .update({
      challenge_started_at: new Date(),      // NOW() –≤ Postgres-—á–∞—Å–∞—Ö
      challenge_status    : 'active'
    })
    .eq('id', cid)
    .is('challenge_started_at', null)        // << –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç ¬´once¬ª

  if (error)
    return res.status(500).json({ ok:false, error:error.message })

  res.json({ ok:true })
}
